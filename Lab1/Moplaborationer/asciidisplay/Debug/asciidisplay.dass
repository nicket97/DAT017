
./Debug/asciidisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f804 	bl	20000010 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <main>:

void main(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
}
20000014:	46c0      	nop			; (mov r8, r8)
20000016:	46bd      	mov	sp, r7
20000018:	bd80      	pop	{r7, pc}

2000001a <delay_250ns>:
void delay_250ns(void){
2000001a:	b580      	push	{r7, lr}
2000001c:	af00      	add	r7, sp, #0
    
*STK_CTRL = 0;
2000001e:	4b0c      	ldr	r3, [pc, #48]	; (20000050 <delay_250ns+0x36>)
20000020:	2200      	movs	r2, #0
20000022:	601a      	str	r2, [r3, #0]
*STK_LOAD = ( (168/4) -1 );
20000024:	4b0b      	ldr	r3, [pc, #44]	; (20000054 <delay_250ns+0x3a>)
20000026:	2229      	movs	r2, #41	; 0x29
20000028:	601a      	str	r2, [r3, #0]
*STK_VAL = 0;
2000002a:	4b0b      	ldr	r3, [pc, #44]	; (20000058 <delay_250ns+0x3e>)
2000002c:	2200      	movs	r2, #0
2000002e:	601a      	str	r2, [r3, #0]
*STK_CTRL = 5;
20000030:	4b07      	ldr	r3, [pc, #28]	; (20000050 <delay_250ns+0x36>)
20000032:	2205      	movs	r2, #5
20000034:	601a      	str	r2, [r3, #0]

 while( (*STK_CTRL & 0x10000 )== 0 )
20000036:	46c0      	nop			; (mov r8, r8)
20000038:	4b05      	ldr	r3, [pc, #20]	; (20000050 <delay_250ns+0x36>)
2000003a:	681a      	ldr	r2, [r3, #0]
2000003c:	2380      	movs	r3, #128	; 0x80
2000003e:	025b      	lsls	r3, r3, #9
20000040:	4013      	ands	r3, r2
20000042:	d0f9      	beq.n	20000038 <delay_250ns+0x1e>
 {}
 *STK_CTRL = 0; 
20000044:	4b02      	ldr	r3, [pc, #8]	; (20000050 <delay_250ns+0x36>)
20000046:	2200      	movs	r2, #0
20000048:	601a      	str	r2, [r3, #0]
    }
2000004a:	46c0      	nop			; (mov r8, r8)
2000004c:	46bd      	mov	sp, r7
2000004e:	bd80      	pop	{r7, pc}
20000050:	e000e010 	and	lr, r0, r0, lsl r0
20000054:	e000e014 	and	lr, r0, r4, lsl r0
20000058:	e000e018 	and	lr, r0, r8, lsl r0

2000005c <delay_mikro>:
void delay_mikro(unsigned int us){
2000005c:	b580      	push	{r7, lr}
2000005e:	b082      	sub	sp, #8
20000060:	af00      	add	r7, sp, #0
20000062:	6078      	str	r0, [r7, #4]
    
     while(us--) {
20000064:	e007      	b.n	20000076 <delay_mikro+0x1a>
     delay_250ns();
20000066:	f7ff ffd8 	bl	2000001a <delay_250ns>
     delay_250ns();
2000006a:	f7ff ffd6 	bl	2000001a <delay_250ns>
     delay_250ns();
2000006e:	f7ff ffd4 	bl	2000001a <delay_250ns>
     delay_250ns();
20000072:	f7ff ffd2 	bl	2000001a <delay_250ns>
     while(us--) {
20000076:	687b      	ldr	r3, [r7, #4]
20000078:	1e5a      	subs	r2, r3, #1
2000007a:	607a      	str	r2, [r7, #4]
2000007c:	2b00      	cmp	r3, #0
2000007e:	d1f2      	bne.n	20000066 <delay_mikro+0xa>
    }
 }
20000080:	46c0      	nop			; (mov r8, r8)
20000082:	46bd      	mov	sp, r7
20000084:	b002      	add	sp, #8
20000086:	bd80      	pop	{r7, pc}

20000088 <delay_milli>:
void delay_milli(unsigned int ms){
20000088:	b580      	push	{r7, lr}
2000008a:	b082      	sub	sp, #8
2000008c:	af00      	add	r7, sp, #0
2000008e:	6078      	str	r0, [r7, #4]
    
   #ifdef SIMULATOR
while( ms-- )
 delay_mikro(1);
#else
while( ms-- )
20000090:	e002      	b.n	20000098 <delay_milli+0x10>
 delay_mikro(1);// ska vara 1000
20000092:	2001      	movs	r0, #1
20000094:	f7ff ffe2 	bl	2000005c <delay_mikro>
while( ms-- )
20000098:	687b      	ldr	r3, [r7, #4]
2000009a:	1e5a      	subs	r2, r3, #1
2000009c:	607a      	str	r2, [r7, #4]
2000009e:	2b00      	cmp	r3, #0
200000a0:	d1f7      	bne.n	20000092 <delay_milli+0xa>
#endif
    }
200000a2:	46c0      	nop			; (mov r8, r8)
200000a4:	46bd      	mov	sp, r7
200000a6:	b002      	add	sp, #8
200000a8:	bd80      	pop	{r7, pc}

200000aa <ascii_ctrl_bit_set>:
void ascii_ctrl_bit_set( unsigned char x )
{ /* Funktion för att 1-ställa bitar */
200000aa:	b580      	push	{r7, lr}
200000ac:	b084      	sub	sp, #16
200000ae:	af00      	add	r7, sp, #0
200000b0:	0002      	movs	r2, r0
200000b2:	1dfb      	adds	r3, r7, #7
200000b4:	701a      	strb	r2, [r3, #0]
unsigned char c;

c = *GPIOE_ODR_LOW;
200000b6:	4a0d      	ldr	r2, [pc, #52]	; (200000ec <ascii_ctrl_bit_set+0x42>)
200000b8:	230f      	movs	r3, #15
200000ba:	18fb      	adds	r3, r7, r3
200000bc:	7812      	ldrb	r2, [r2, #0]
200000be:	701a      	strb	r2, [r3, #0]
c |= ( B_SELECT | x );
200000c0:	1dfa      	adds	r2, r7, #7
200000c2:	230f      	movs	r3, #15
200000c4:	18fb      	adds	r3, r7, r3
200000c6:	7812      	ldrb	r2, [r2, #0]
200000c8:	781b      	ldrb	r3, [r3, #0]
200000ca:	4313      	orrs	r3, r2
200000cc:	b2da      	uxtb	r2, r3
200000ce:	230f      	movs	r3, #15
200000d0:	18fb      	adds	r3, r7, r3
200000d2:	2104      	movs	r1, #4
200000d4:	430a      	orrs	r2, r1
200000d6:	701a      	strb	r2, [r3, #0]
*GPIOE_ODR_LOW = c;
200000d8:	4a04      	ldr	r2, [pc, #16]	; (200000ec <ascii_ctrl_bit_set+0x42>)
200000da:	230f      	movs	r3, #15
200000dc:	18fb      	adds	r3, r7, r3
200000de:	781b      	ldrb	r3, [r3, #0]
200000e0:	7013      	strb	r3, [r2, #0]
}
200000e2:	46c0      	nop			; (mov r8, r8)
200000e4:	46bd      	mov	sp, r7
200000e6:	b004      	add	sp, #16
200000e8:	bd80      	pop	{r7, pc}
200000ea:	46c0      	nop			; (mov r8, r8)
200000ec:	40021014 	andmi	r1, r2, r4, lsl r0

200000f0 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear( unsigned char x )
{
200000f0:	b580      	push	{r7, lr}
200000f2:	b084      	sub	sp, #16
200000f4:	af00      	add	r7, sp, #0
200000f6:	0002      	movs	r2, r0
200000f8:	1dfb      	adds	r3, r7, #7
200000fa:	701a      	strb	r2, [r3, #0]
unsigned char c;
c = *GPIOE_ODR_LOW;
200000fc:	4a0f      	ldr	r2, [pc, #60]	; (2000013c <ascii_ctrl_bit_clear+0x4c>)
200000fe:	230f      	movs	r3, #15
20000100:	18fb      	adds	r3, r7, r3
20000102:	7812      	ldrb	r2, [r2, #0]
20000104:	701a      	strb	r2, [r3, #0]
c = B_SELECT | ( c & ~x );
20000106:	1dfb      	adds	r3, r7, #7
20000108:	781b      	ldrb	r3, [r3, #0]
2000010a:	b25b      	sxtb	r3, r3
2000010c:	43db      	mvns	r3, r3
2000010e:	b25b      	sxtb	r3, r3
20000110:	220f      	movs	r2, #15
20000112:	18ba      	adds	r2, r7, r2
20000114:	7812      	ldrb	r2, [r2, #0]
20000116:	b252      	sxtb	r2, r2
20000118:	4013      	ands	r3, r2
2000011a:	b25b      	sxtb	r3, r3
2000011c:	2204      	movs	r2, #4
2000011e:	4313      	orrs	r3, r2
20000120:	b25a      	sxtb	r2, r3
20000122:	230f      	movs	r3, #15
20000124:	18fb      	adds	r3, r7, r3
20000126:	701a      	strb	r2, [r3, #0]
*GPIOE_ODR_LOW = c;
20000128:	4a04      	ldr	r2, [pc, #16]	; (2000013c <ascii_ctrl_bit_clear+0x4c>)
2000012a:	230f      	movs	r3, #15
2000012c:	18fb      	adds	r3, r7, r3
2000012e:	781b      	ldrb	r3, [r3, #0]
20000130:	7013      	strb	r3, [r2, #0]
} 
20000132:	46c0      	nop			; (mov r8, r8)
20000134:	46bd      	mov	sp, r7
20000136:	b004      	add	sp, #16
20000138:	bd80      	pop	{r7, pc}
2000013a:	46c0      	nop			; (mov r8, r8)
2000013c:	40021014 	andmi	r1, r2, r4, lsl r0

20000140 <ascii_write_cmd>:


void ascii_write_cmd(unsigned char c)
{
20000140:	b580      	push	{r7, lr}
20000142:	b082      	sub	sp, #8
20000144:	af00      	add	r7, sp, #0
20000146:	0002      	movs	r2, r0
20000148:	1dfb      	adds	r3, r7, #7
2000014a:	701a      	strb	r2, [r3, #0]
    ascii_ctrl_bit_clear(B_RS | B_RW);    // "|" = bitvis eller
2000014c:	2003      	movs	r0, #3
2000014e:	f7ff ffcf 	bl	200000f0 <ascii_ctrl_bit_clear>
    ascii_write_controller(c);
20000152:	1dfb      	adds	r3, r7, #7
20000154:	781b      	ldrb	r3, [r3, #0]
20000156:	0018      	movs	r0, r3
20000158:	f000 f804 	bl	20000164 <ascii_write_controller>
}
2000015c:	46c0      	nop			; (mov r8, r8)
2000015e:	46bd      	mov	sp, r7
20000160:	b002      	add	sp, #8
20000162:	bd80      	pop	{r7, pc}

20000164 <ascii_write_controller>:
void ascii_write_controller( unsigned char c )
{
20000164:	b580      	push	{r7, lr}
20000166:	b082      	sub	sp, #8
20000168:	af00      	add	r7, sp, #0
2000016a:	0002      	movs	r2, r0
2000016c:	1dfb      	adds	r3, r7, #7
2000016e:	701a      	strb	r2, [r3, #0]
ascii_ctrl_bit_set( B_E );
20000170:	2040      	movs	r0, #64	; 0x40
20000172:	f7ff ff9a 	bl	200000aa <ascii_ctrl_bit_set>
*GPIOE_ODR_HIGH = c;
20000176:	4a06      	ldr	r2, [pc, #24]	; (20000190 <ascii_write_controller+0x2c>)
20000178:	1dfb      	adds	r3, r7, #7
2000017a:	781b      	ldrb	r3, [r3, #0]
2000017c:	7013      	strb	r3, [r2, #0]
delay_250ns();
2000017e:	f7ff ff4c 	bl	2000001a <delay_250ns>
ascii_ctrl_bit_clear( B_E );
20000182:	2040      	movs	r0, #64	; 0x40
20000184:	f7ff ffb4 	bl	200000f0 <ascii_ctrl_bit_clear>
}
20000188:	46c0      	nop			; (mov r8, r8)
2000018a:	46bd      	mov	sp, r7
2000018c:	b002      	add	sp, #8
2000018e:	bd80      	pop	{r7, pc}
20000190:	40021015 	andmi	r1, r2, r5, lsl r0

20000194 <ascii_read_controller>:
unsigned char ascii_read_controller( void )
{
20000194:	b580      	push	{r7, lr}
20000196:	b082      	sub	sp, #8
20000198:	af00      	add	r7, sp, #0
unsigned char c;
ascii_ctrl_bit_set( B_E );
2000019a:	2040      	movs	r0, #64	; 0x40
2000019c:	f7ff ff85 	bl	200000aa <ascii_ctrl_bit_set>
delay_250ns(); /* max 360 ns */
200001a0:	f7ff ff3b 	bl	2000001a <delay_250ns>
delay_250ns();
200001a4:	f7ff ff39 	bl	2000001a <delay_250ns>
c = *GPIOE_IDR_HIGH;
200001a8:	4a06      	ldr	r2, [pc, #24]	; (200001c4 <ascii_read_controller+0x30>)
200001aa:	1dfb      	adds	r3, r7, #7
200001ac:	7812      	ldrb	r2, [r2, #0]
200001ae:	701a      	strb	r2, [r3, #0]
ascii_ctrl_bit_clear( B_E );
200001b0:	2040      	movs	r0, #64	; 0x40
200001b2:	f7ff ff9d 	bl	200000f0 <ascii_ctrl_bit_clear>
return c;
200001b6:	1dfb      	adds	r3, r7, #7
200001b8:	781b      	ldrb	r3, [r3, #0]
200001ba:	0018      	movs	r0, r3
200001bc:	46bd      	mov	sp, r7
200001be:	b002      	add	sp, #8
200001c0:	bd80      	pop	{r7, pc}
200001c2:	46c0      	nop			; (mov r8, r8)
200001c4:	40021011 	andmi	r1, r2, r1, lsl r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000017f 	andeq	r0, r0, pc, ror r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000005d 	andeq	r0, r0, sp, asr r0
  10:	0001030c 	andeq	r0, r1, ip, lsl #6
	...
  20:	01450200 	mrseq	r0, (UNDEF: 101)
  24:	6c010000 	stcvs	0, cr0, [r1], {-0}
  28:	00000047 	andeq	r0, r0, r7, asr #32
  2c:	20000194 	mulcs	r0, r4, r1
  30:	00000034 	andeq	r0, r0, r4, lsr r0
  34:	00479c01 	subeq	r9, r7, r1, lsl #24
  38:	63030000 	movwvs	r0, #12288	; 0x3000
  3c:	476e0100 	strbmi	r0, [lr, -r0, lsl #2]!
  40:	02000000 	andeq	r0, r0, #0
  44:	04007791 	streq	r7, [r0], #-1937	; 0xfffff86f
  48:	00f50801 	rscseq	r0, r5, r1, lsl #16
  4c:	46050000 	strmi	r0, [r5], -r0
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	00016465 	andeq	r6, r1, r5, ror #8
  58:	00003020 	andeq	r3, r0, r0, lsr #32
  5c:	709c0100 	addsvc	r0, ip, r0, lsl #2
  60:	06000000 	streq	r0, [r0], -r0
  64:	65010063 	strvs	r0, [r1, #-99]	; 0xffffff9d
  68:	00000047 	andeq	r0, r0, r7, asr #32
  6c:	00779102 	rsbseq	r9, r7, r2, lsl #2
  70:	00017b05 	andeq	r7, r1, r5, lsl #22
  74:	40600100 	rsbmi	r0, r0, r0, lsl #2
  78:	24200001 	strtcs	r0, [r0], #-1
  7c:	01000000 	mrseq	r0, (UNDEF: 0)
  80:	00009f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
  84:	00630600 	rsbeq	r0, r3, r0, lsl #12
  88:	00476001 	subeq	r6, r7, r1
  8c:	91020000 	mrsls	r0, (UNDEF: 2)
  90:	00460777 	subeq	r0, r6, r7, ror r7
  94:	63010000 	movwvs	r0, #4096	; 0x1000
  98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
  9c:	09000008 	stmdbeq	r0, {r3}
  a0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  a4:	1e0a0074 	mcrne	0, 0, r0, cr10, cr4, {3}
  a8:	01000000 	mrseq	r0, (UNDEF: 0)
  ac:	0000f057 	andeq	pc, r0, r7, asr r0	; <UNPREDICTABLE>
  b0:	00005020 	andeq	r5, r0, r0, lsr #32
  b4:	d49c0100 	ldrle	r0, [ip], #256	; 0x100
  b8:	06000000 	streq	r0, [r0], -r0
  bc:	57010078 	smlsdxpl	r1, r8, r0, r0
  c0:	00000047 	andeq	r0, r0, r7, asr #32
  c4:	036f9102 	cmneq	pc, #-2147483648	; 0x80000000
  c8:	59010063 	stmdbpl	r1, {r0, r1, r5, r6}
  cc:	00000047 	andeq	r0, r0, r7, asr #32
  d0:	00779102 	rsbseq	r9, r7, r2, lsl #2
  d4:	0000330a 	andeq	r3, r0, sl, lsl #6
  d8:	aa4e0100 	bge	13804e0 <startup-0x1ec7fb20>
  dc:	46200000 	strtmi	r0, [r0], -r0
  e0:	01000000 	mrseq	r0, (UNDEF: 0)
  e4:	0001029c 	muleq	r1, ip, r2
  e8:	00780600 	rsbseq	r0, r8, r0, lsl #12
  ec:	00474e01 	subeq	r4, r7, r1, lsl #28
  f0:	91020000 	mrsls	r0, (UNDEF: 2)
  f4:	0063036f 	rsbeq	r0, r3, pc, ror #6
  f8:	00475001 	subeq	r5, r7, r1
  fc:	91020000 	mrsls	r0, (UNDEF: 2)
 100:	5b050077 	blpl	1402e4 <startup-0x1febfd1c>
 104:	01000001 	tsteq	r0, r1
 108:	00008844 	andeq	r8, r0, r4, asr #16
 10c:	00002220 	andeq	r2, r0, r0, lsr #4
 110:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
 114:	06000001 	streq	r0, [r0], -r1
 118:	0100736d 	tsteq	r0, sp, ror #6
 11c:	00012544 	andeq	r2, r1, r4, asr #10
 120:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 124:	07040400 	streq	r0, [r4, -r0, lsl #8]
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000d05 	andeq	r0, r0, r5, lsl #26
 130:	5c3b0100 	ldfpls	f0, [fp], #-0
 134:	2c200000 	stccs	0, cr0, [r0], #-0
 138:	01000000 	mrseq	r0, (UNDEF: 0)
 13c:	00014f9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
 140:	73750600 	cmnvc	r5, #0, 12
 144:	253b0100 	ldrcs	r0, [fp, #-256]!	; 0xffffff00
 148:	02000001 	andeq	r0, r0, #1
 14c:	0b007491 	bleq	1d398 <startup-0x1ffe2c68>
 150:	00000167 	andeq	r0, r0, r7, ror #2
 154:	001a3001 	andseq	r3, sl, r1
 158:	00422000 	subeq	r2, r2, r0
 15c:	9c010000 	stcls	0, cr0, [r1], {-0}
 160:	0000190b 	andeq	r1, r0, fp, lsl #18
 164:	102d0100 	eorne	r0, sp, r0, lsl #2
 168:	0a200000 	beq	800170 <startup-0x1f7ffe90>
 16c:	01000000 	mrseq	r0, (UNDEF: 0)
 170:	01730b9c 			; <UNDEFINED> instruction: 0x01730b9c
 174:	23010000 	movwcs	r0, #4096	; 0x1000
 178:	20000000 	andcs	r0, r0, r0
 17c:	0000000c 	andeq	r0, r0, ip
 180:	Address 0x00000180 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
  14:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13491927 	movtne	r1, #39207	; 0x9927
  20:	06120111 			; <UNDEFINED> instruction: 0x06120111
  24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  28:	00130119 	andseq	r0, r3, r9, lsl r1
  2c:	00340300 	eorseq	r0, r4, r0, lsl #6
  30:	0b3a0803 	bleq	e82044 <startup-0x1f17dfbc>
  34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  38:	00001802 	andeq	r1, r0, r2, lsl #16
  3c:	0b002404 	bleq	9054 <startup-0x1fff6fac>
  40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  44:	0500000e 	streq	r0, [r0, #-14]
  48:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  4c:	0b3a0e03 	bleq	e83860 <startup-0x1f17c7a0>
  50:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  54:	06120111 			; <UNDEFINED> instruction: 0x06120111
  58:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  5c:	00130119 	andseq	r0, r3, r9, lsl r1
  60:	00050600 	andeq	r0, r5, r0, lsl #12
  64:	0b3a0803 	bleq	e82078 <startup-0x1f17df88>
  68:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  6c:	00001802 	andeq	r1, r0, r2, lsl #16
  70:	3f012e07 	svccc	0x00012e07
  74:	3a0e0319 	bcc	380ce0 <startup-0x1fc7f320>
  78:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  7c:	00193c13 	andseq	r3, r9, r3, lsl ip
  80:	00180800 	andseq	r0, r8, r0, lsl #16
  84:	24090000 	strcs	r0, [r9], #-0
  88:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  8c:	0008030b 	andeq	r0, r8, fp, lsl #6
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	01111927 	tsteq	r1, r7, lsr #18
  a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
  a8:	0b000013 	bleq	fc <startup-0x1fffff04>
  ac:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  b0:	0b3a0e03 	bleq	e838c4 <startup-0x1f17c73c>
  b4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
  bc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  c0:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001c8 	andcs	r0, r0, r8, asr #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000b8 	strheq	r0, [r0], -r8
   4:	00580002 	subseq	r0, r8, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
  28:	41442f61 	cmpmi	r4, r1, ror #30
  2c:	37313054 			; <UNDEFINED> instruction: 0x37313054
  30:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  34:	6f4d2f31 	svcvs	0x004d2f31
  38:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  3c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  40:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  44:	73612f72 	cmnvc	r1, #456	; 0x1c8
  48:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
  4c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  50:	00007961 	andeq	r7, r0, r1, ror #18
  54:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  58:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  5c:	00010063 	andeq	r0, r1, r3, rrx
  60:	05000000 	streq	r0, [r0, #-0]
  64:	00000002 	andeq	r0, r0, r2
  68:	01230320 			; <UNDEFINED> instruction: 0x01230320
  6c:	03025e13 	movweq	r5, #11795	; 0x2e13
  70:	00010100 	andeq	r0, r1, r0, lsl #2
  74:	00100205 	andseq	r0, r0, r5, lsl #4
  78:	2d032000 	stccs	0, cr2, [r3, #-0]
  7c:	303d2f01 	eorscc	r2, sp, r1, lsl #30
  80:	3e3d3d3d 	mrccc	13, 1, r3, cr13, cr13, {1}
  84:	01040200 	mrseq	r0, R12_usr
  88:	68062006 	stmdavs	r6, {r1, r2, sp}
  8c:	214c913d 	cmpcs	ip, sp, lsr r1
  90:	2a2f2f2f 	bcs	bcbd54 <startup-0x1f4342ac>
  94:	21504b5e 	cmpcs	r0, lr, asr fp
  98:	694c5b3b 	stmdbvs	ip, {r0, r1, r3, r4, r5, r8, r9, fp, ip, lr}^
  9c:	7759bb59 			; <UNDEFINED> instruction: 0x7759bb59
  a0:	13085968 	movwne	r5, #35176	; 0x8968
  a4:	3d677859 	stclcc	8, cr7, [r7, #-356]!	; 0xfffffe9c
  a8:	3d674c59 	stclcc	12, cr4, [r7, #-356]!	; 0xfffffe9c
  ac:	683d2f4b 	ldmdavs	sp!, {r0, r1, r3, r6, r8, r9, sl, fp, sp}
  b0:	2f2f3d3e 	svccs	0x002f3d3e
  b4:	022f3d4b 	eoreq	r3, pc, #4800	; 0x12c0
  b8:	01010007 	tsteq	r1, r7

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	6c656400 	cfstrdvs	mvd6, [r5], #-0
  10:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; ffffff56 <ascii_read_controller+0xdffffdc2>	; <UNPREDICTABLE>
  14:	6f726b69 	svcvs	0x00726b69
  18:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  1c:	7361006e 	cmnvc	r1, #110	; 0x6e
  20:	5f696963 	svcpl	0x00696963
  24:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  28:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  2c:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
  30:	61007261 	tstvs	r0, r1, ror #4
  34:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  38:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
  3c:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
  40:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
  44:	73610074 	cmnvc	r1, #116	; 0x74
  48:	5f696963 	svcpl	0x00696963
  4c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
  50:	6f635f65 	svcvs	0x00635f65
  54:	6f72746e 	svcvs	0x0072746e
  58:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
  5c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  60:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  64:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
  68:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  6c:	30373130 	eorscc	r3, r7, r0, lsr r1
  70:	20353132 	eorscs	r3, r5, r2, lsr r1
  74:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  78:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  7c:	415b2029 	cmpmi	fp, r9, lsr #32
  80:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff336 <ascii_read_controller+0xdffff1a2>
  84:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  88:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  8c:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
  90:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  94:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  98:	6f697369 	svcvs	0x00697369
  9c:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
  a0:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
  a4:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  a8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  ac:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  b0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  b4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  b8:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  bc:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  c0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  c4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  c8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  cc:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  d0:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  d4:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  d8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  dc:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  e0:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  e4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  e8:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  ec:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  f0:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  f4:	736e7500 	cmnvc	lr, #0, 10
  f8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  fc:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 100:	43007261 	movwmi	r7, #609	; 0x261
 104:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 108:	2f737265 	svccs	0x00737265
 10c:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
 110:	41442f61 	cmpmi	r4, r1, ror #30
 114:	37313054 			; <UNDEFINED> instruction: 0x37313054
 118:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
 11c:	6f4d2f31 	svcvs	0x004d2f31
 120:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 124:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 128:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 12c:	73612f72 	cmnvc	r1, #456	; 0x1c8
 130:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
 134:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 138:	732f7961 			; <UNDEFINED> instruction: 0x732f7961
 13c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 140:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
 144:	63736100 	cmnvs	r3, #0, 2
 148:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 14c:	5f646165 	svcpl	0x00646165
 150:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 154:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 158:	64007265 	strvs	r7, [r0], #-613	; 0xfffffd9b
 15c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 160:	6c696d5f 	stclvs	13, cr6, [r9], #-380	; 0xfffffe84
 164:	6400696c 	strvs	r6, [r0], #-2412	; 0xfffff694
 168:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 16c:	3035325f 	eorscc	r3, r5, pc, asr r2
 170:	7300736e 	movwvc	r7, #878	; 0x36e
 174:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 178:	61007075 	tstvs	r0, r5, ror r0
 17c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 180:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 184:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 188:	Address 0x00000188 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	0000000a 	andeq	r0, r0, sl
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	2000001a 	andcs	r0, r0, sl, lsl r0
  48:	00000042 	andeq	r0, r0, r2, asr #32
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	2000005c 	andcs	r0, r0, ip, asr r0
  64:	0000002c 	andeq	r0, r0, ip, lsr #32
  68:	40080e41 	andmi	r0, r8, r1, asr #28
  6c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  70:	100e4101 	andne	r4, lr, r1, lsl #2
  74:	00070d41 	andeq	r0, r7, r1, asr #26
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	20000088 	andcs	r0, r0, r8, lsl #1
  84:	00000022 	andeq	r0, r0, r2, lsr #32
  88:	40080e41 	andmi	r0, r8, r1, asr #28
  8c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  90:	100e4101 	andne	r4, lr, r1, lsl #2
  94:	00070d41 	andeq	r0, r7, r1, asr #26
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	200000aa 	andcs	r0, r0, sl, lsr #1
  a4:	00000046 	andeq	r0, r0, r6, asr #32
  a8:	40080e41 	andmi	r0, r8, r1, asr #28
  ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b0:	180e4101 	stmdane	lr, {r0, r8, lr}
  b4:	00070d41 	andeq	r0, r7, r1, asr #26
  b8:	0000001c 	andeq	r0, r0, ip, lsl r0
  bc:	00000000 	andeq	r0, r0, r0
  c0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  c4:	00000050 	andeq	r0, r0, r0, asr r0
  c8:	40080e41 	andmi	r0, r8, r1, asr #28
  cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d0:	180e4101 	stmdane	lr, {r0, r8, lr}
  d4:	00070d41 	andeq	r0, r7, r1, asr #26
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	00000000 	andeq	r0, r0, r0
  e0:	20000140 	andcs	r0, r0, r0, asr #2
  e4:	00000024 	andeq	r0, r0, r4, lsr #32
  e8:	40080e41 	andmi	r0, r8, r1, asr #28
  ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  f0:	100e4101 	andne	r4, lr, r1, lsl #2
  f4:	00070d41 	andeq	r0, r7, r1, asr #26
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	20000164 	andcs	r0, r0, r4, ror #2
 104:	00000030 	andeq	r0, r0, r0, lsr r0
 108:	40080e41 	andmi	r0, r8, r1, asr #28
 10c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 110:	100e4101 	andne	r4, lr, r1, lsl #2
 114:	00070d41 	andeq	r0, r7, r1, asr #26
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	00000000 	andeq	r0, r0, r0
 120:	20000194 	mulcs	r0, r4, r1
 124:	00000034 	andeq	r0, r0, r4, lsr r0
 128:	40080e41 	andmi	r0, r8, r1, asr #28
 12c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 130:	100e4101 	andne	r4, lr, r1, lsl #2
 134:	00070d41 	andeq	r0, r7, r1, asr #26
