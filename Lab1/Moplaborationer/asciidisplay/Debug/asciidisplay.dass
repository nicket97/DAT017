
./Debug/asciidisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f804 	bl	20000010 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <main>:

void main(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
    char *s;
    char test1[] = {'H','E','J'};
20000016:	003b      	movs	r3, r7
20000018:	4a0c      	ldr	r2, [pc, #48]	; (2000004c <main+0x3c>)
2000001a:	8811      	ldrh	r1, [r2, #0]
2000001c:	8019      	strh	r1, [r3, #0]
2000001e:	7892      	ldrb	r2, [r2, #2]
20000020:	709a      	strb	r2, [r3, #2]
    for(int i = 0; i < 3; i++){
20000022:	2300      	movs	r3, #0
20000024:	607b      	str	r3, [r7, #4]
20000026:	e009      	b.n	2000003c <main+0x2c>
        ascii_write_cmd(test1[i]);
20000028:	003a      	movs	r2, r7
2000002a:	687b      	ldr	r3, [r7, #4]
2000002c:	18d3      	adds	r3, r2, r3
2000002e:	781b      	ldrb	r3, [r3, #0]
20000030:	0018      	movs	r0, r3
20000032:	f000 f8a1 	bl	20000178 <ascii_write_cmd>
    for(int i = 0; i < 3; i++){
20000036:	687b      	ldr	r3, [r7, #4]
20000038:	3301      	adds	r3, #1
2000003a:	607b      	str	r3, [r7, #4]
2000003c:	687b      	ldr	r3, [r7, #4]
2000003e:	2b02      	cmp	r3, #2
20000040:	ddf2      	ble.n	20000028 <main+0x18>
        }
}
20000042:	46c0      	nop			; (mov r8, r8)
20000044:	46bd      	mov	sp, r7
20000046:	b002      	add	sp, #8
20000048:	bd80      	pop	{r7, pc}
2000004a:	46c0      	nop			; (mov r8, r8)
2000004c:	20000200 	andcs	r0, r0, r0, lsl #4

20000050 <delay_250ns>:
void delay_250ns(void){
20000050:	b580      	push	{r7, lr}
20000052:	af00      	add	r7, sp, #0
    
*STK_CTRL = 0;
20000054:	4b0c      	ldr	r3, [pc, #48]	; (20000088 <delay_250ns+0x38>)
20000056:	2200      	movs	r2, #0
20000058:	601a      	str	r2, [r3, #0]
*STK_LOAD = ( (168/4) -1 );
2000005a:	4b0c      	ldr	r3, [pc, #48]	; (2000008c <delay_250ns+0x3c>)
2000005c:	2229      	movs	r2, #41	; 0x29
2000005e:	601a      	str	r2, [r3, #0]
*STK_VAL = 0;
20000060:	4b0b      	ldr	r3, [pc, #44]	; (20000090 <delay_250ns+0x40>)
20000062:	2200      	movs	r2, #0
20000064:	601a      	str	r2, [r3, #0]
*STK_CTRL = 5;
20000066:	4b08      	ldr	r3, [pc, #32]	; (20000088 <delay_250ns+0x38>)
20000068:	2205      	movs	r2, #5
2000006a:	601a      	str	r2, [r3, #0]

 while( (*STK_CTRL & 0x10000 )== 0 )
2000006c:	46c0      	nop			; (mov r8, r8)
2000006e:	4b06      	ldr	r3, [pc, #24]	; (20000088 <delay_250ns+0x38>)
20000070:	681a      	ldr	r2, [r3, #0]
20000072:	2380      	movs	r3, #128	; 0x80
20000074:	025b      	lsls	r3, r3, #9
20000076:	4013      	ands	r3, r2
20000078:	d0f9      	beq.n	2000006e <delay_250ns+0x1e>
 {}
 *STK_CTRL = 0; 
2000007a:	4b03      	ldr	r3, [pc, #12]	; (20000088 <delay_250ns+0x38>)
2000007c:	2200      	movs	r2, #0
2000007e:	601a      	str	r2, [r3, #0]
    }
20000080:	46c0      	nop			; (mov r8, r8)
20000082:	46bd      	mov	sp, r7
20000084:	bd80      	pop	{r7, pc}
20000086:	46c0      	nop			; (mov r8, r8)
20000088:	e000e010 	and	lr, r0, r0, lsl r0
2000008c:	e000e014 	and	lr, r0, r4, lsl r0
20000090:	e000e018 	and	lr, r0, r8, lsl r0

20000094 <delay_mikro>:
void delay_mikro(unsigned int us){
20000094:	b580      	push	{r7, lr}
20000096:	b082      	sub	sp, #8
20000098:	af00      	add	r7, sp, #0
2000009a:	6078      	str	r0, [r7, #4]
    
     while(us--) {
2000009c:	e007      	b.n	200000ae <delay_mikro+0x1a>
     delay_250ns();
2000009e:	f7ff ffd7 	bl	20000050 <delay_250ns>
     delay_250ns();
200000a2:	f7ff ffd5 	bl	20000050 <delay_250ns>
     delay_250ns();
200000a6:	f7ff ffd3 	bl	20000050 <delay_250ns>
     delay_250ns();
200000aa:	f7ff ffd1 	bl	20000050 <delay_250ns>
     while(us--) {
200000ae:	687b      	ldr	r3, [r7, #4]
200000b0:	1e5a      	subs	r2, r3, #1
200000b2:	607a      	str	r2, [r7, #4]
200000b4:	2b00      	cmp	r3, #0
200000b6:	d1f2      	bne.n	2000009e <delay_mikro+0xa>
    }
 }
200000b8:	46c0      	nop			; (mov r8, r8)
200000ba:	46bd      	mov	sp, r7
200000bc:	b002      	add	sp, #8
200000be:	bd80      	pop	{r7, pc}

200000c0 <delay_milli>:
void delay_milli(unsigned int ms){
200000c0:	b580      	push	{r7, lr}
200000c2:	b082      	sub	sp, #8
200000c4:	af00      	add	r7, sp, #0
200000c6:	6078      	str	r0, [r7, #4]
    
   #ifdef SIMULATOR
while( ms-- )
 delay_mikro(1);
#else
while( ms-- )
200000c8:	e002      	b.n	200000d0 <delay_milli+0x10>
 delay_mikro(1);// ska vara 1000
200000ca:	2001      	movs	r0, #1
200000cc:	f7ff ffe2 	bl	20000094 <delay_mikro>
while( ms-- )
200000d0:	687b      	ldr	r3, [r7, #4]
200000d2:	1e5a      	subs	r2, r3, #1
200000d4:	607a      	str	r2, [r7, #4]
200000d6:	2b00      	cmp	r3, #0
200000d8:	d1f7      	bne.n	200000ca <delay_milli+0xa>
#endif
    }
200000da:	46c0      	nop			; (mov r8, r8)
200000dc:	46bd      	mov	sp, r7
200000de:	b002      	add	sp, #8
200000e0:	bd80      	pop	{r7, pc}

200000e2 <ascii_ctrl_bit_set>:
void ascii_ctrl_bit_set( unsigned char x )
{ /* Funktion för att 1-ställa bitar */
200000e2:	b580      	push	{r7, lr}
200000e4:	b084      	sub	sp, #16
200000e6:	af00      	add	r7, sp, #0
200000e8:	0002      	movs	r2, r0
200000ea:	1dfb      	adds	r3, r7, #7
200000ec:	701a      	strb	r2, [r3, #0]
unsigned char c;

c = *GPIOE_ODR_LOW;
200000ee:	4a0d      	ldr	r2, [pc, #52]	; (20000124 <ascii_ctrl_bit_set+0x42>)
200000f0:	230f      	movs	r3, #15
200000f2:	18fb      	adds	r3, r7, r3
200000f4:	7812      	ldrb	r2, [r2, #0]
200000f6:	701a      	strb	r2, [r3, #0]
c |= ( B_SELECT | x );
200000f8:	1dfa      	adds	r2, r7, #7
200000fa:	230f      	movs	r3, #15
200000fc:	18fb      	adds	r3, r7, r3
200000fe:	7812      	ldrb	r2, [r2, #0]
20000100:	781b      	ldrb	r3, [r3, #0]
20000102:	4313      	orrs	r3, r2
20000104:	b2da      	uxtb	r2, r3
20000106:	230f      	movs	r3, #15
20000108:	18fb      	adds	r3, r7, r3
2000010a:	2104      	movs	r1, #4
2000010c:	430a      	orrs	r2, r1
2000010e:	701a      	strb	r2, [r3, #0]
*GPIOE_ODR_LOW = c;
20000110:	4a04      	ldr	r2, [pc, #16]	; (20000124 <ascii_ctrl_bit_set+0x42>)
20000112:	230f      	movs	r3, #15
20000114:	18fb      	adds	r3, r7, r3
20000116:	781b      	ldrb	r3, [r3, #0]
20000118:	7013      	strb	r3, [r2, #0]
}
2000011a:	46c0      	nop			; (mov r8, r8)
2000011c:	46bd      	mov	sp, r7
2000011e:	b004      	add	sp, #16
20000120:	bd80      	pop	{r7, pc}
20000122:	46c0      	nop			; (mov r8, r8)
20000124:	40021014 	andmi	r1, r2, r4, lsl r0

20000128 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear( unsigned char x )
{
20000128:	b580      	push	{r7, lr}
2000012a:	b084      	sub	sp, #16
2000012c:	af00      	add	r7, sp, #0
2000012e:	0002      	movs	r2, r0
20000130:	1dfb      	adds	r3, r7, #7
20000132:	701a      	strb	r2, [r3, #0]
unsigned char c;
c = *GPIOE_ODR_LOW;
20000134:	4a0f      	ldr	r2, [pc, #60]	; (20000174 <ascii_ctrl_bit_clear+0x4c>)
20000136:	230f      	movs	r3, #15
20000138:	18fb      	adds	r3, r7, r3
2000013a:	7812      	ldrb	r2, [r2, #0]
2000013c:	701a      	strb	r2, [r3, #0]
c = B_SELECT | ( c & ~x );
2000013e:	1dfb      	adds	r3, r7, #7
20000140:	781b      	ldrb	r3, [r3, #0]
20000142:	b25b      	sxtb	r3, r3
20000144:	43db      	mvns	r3, r3
20000146:	b25b      	sxtb	r3, r3
20000148:	220f      	movs	r2, #15
2000014a:	18ba      	adds	r2, r7, r2
2000014c:	7812      	ldrb	r2, [r2, #0]
2000014e:	b252      	sxtb	r2, r2
20000150:	4013      	ands	r3, r2
20000152:	b25b      	sxtb	r3, r3
20000154:	2204      	movs	r2, #4
20000156:	4313      	orrs	r3, r2
20000158:	b25a      	sxtb	r2, r3
2000015a:	230f      	movs	r3, #15
2000015c:	18fb      	adds	r3, r7, r3
2000015e:	701a      	strb	r2, [r3, #0]
*GPIOE_ODR_LOW = c;
20000160:	4a04      	ldr	r2, [pc, #16]	; (20000174 <ascii_ctrl_bit_clear+0x4c>)
20000162:	230f      	movs	r3, #15
20000164:	18fb      	adds	r3, r7, r3
20000166:	781b      	ldrb	r3, [r3, #0]
20000168:	7013      	strb	r3, [r2, #0]
} 
2000016a:	46c0      	nop			; (mov r8, r8)
2000016c:	46bd      	mov	sp, r7
2000016e:	b004      	add	sp, #16
20000170:	bd80      	pop	{r7, pc}
20000172:	46c0      	nop			; (mov r8, r8)
20000174:	40021014 	andmi	r1, r2, r4, lsl r0

20000178 <ascii_write_cmd>:


void ascii_write_cmd(unsigned char c)
{
20000178:	b580      	push	{r7, lr}
2000017a:	b082      	sub	sp, #8
2000017c:	af00      	add	r7, sp, #0
2000017e:	0002      	movs	r2, r0
20000180:	1dfb      	adds	r3, r7, #7
20000182:	701a      	strb	r2, [r3, #0]
    ascii_ctrl_bit_clear(B_RS | B_RW);    // "|" = bitvis eller
20000184:	2003      	movs	r0, #3
20000186:	f7ff ffcf 	bl	20000128 <ascii_ctrl_bit_clear>
    ascii_write_controller(c);
2000018a:	1dfb      	adds	r3, r7, #7
2000018c:	781b      	ldrb	r3, [r3, #0]
2000018e:	0018      	movs	r0, r3
20000190:	f000 f804 	bl	2000019c <ascii_write_controller>
}
20000194:	46c0      	nop			; (mov r8, r8)
20000196:	46bd      	mov	sp, r7
20000198:	b002      	add	sp, #8
2000019a:	bd80      	pop	{r7, pc}

2000019c <ascii_write_controller>:
void ascii_write_controller( unsigned char c )
{
2000019c:	b580      	push	{r7, lr}
2000019e:	b082      	sub	sp, #8
200001a0:	af00      	add	r7, sp, #0
200001a2:	0002      	movs	r2, r0
200001a4:	1dfb      	adds	r3, r7, #7
200001a6:	701a      	strb	r2, [r3, #0]
ascii_ctrl_bit_set( B_E );
200001a8:	2040      	movs	r0, #64	; 0x40
200001aa:	f7ff ff9a 	bl	200000e2 <ascii_ctrl_bit_set>
*GPIOE_ODR_HIGH = c;
200001ae:	4a06      	ldr	r2, [pc, #24]	; (200001c8 <ascii_write_controller+0x2c>)
200001b0:	1dfb      	adds	r3, r7, #7
200001b2:	781b      	ldrb	r3, [r3, #0]
200001b4:	7013      	strb	r3, [r2, #0]
delay_250ns();
200001b6:	f7ff ff4b 	bl	20000050 <delay_250ns>
ascii_ctrl_bit_clear( B_E );
200001ba:	2040      	movs	r0, #64	; 0x40
200001bc:	f7ff ffb4 	bl	20000128 <ascii_ctrl_bit_clear>
}
200001c0:	46c0      	nop			; (mov r8, r8)
200001c2:	46bd      	mov	sp, r7
200001c4:	b002      	add	sp, #8
200001c6:	bd80      	pop	{r7, pc}
200001c8:	40021015 	andmi	r1, r2, r5, lsl r0

200001cc <ascii_read_controller>:
unsigned char ascii_read_controller( void )
{
200001cc:	b580      	push	{r7, lr}
200001ce:	b082      	sub	sp, #8
200001d0:	af00      	add	r7, sp, #0
unsigned char c;
ascii_ctrl_bit_set( B_E );
200001d2:	2040      	movs	r0, #64	; 0x40
200001d4:	f7ff ff85 	bl	200000e2 <ascii_ctrl_bit_set>
delay_250ns(); /* max 360 ns */
200001d8:	f7ff ff3a 	bl	20000050 <delay_250ns>
delay_250ns();
200001dc:	f7ff ff38 	bl	20000050 <delay_250ns>
c = *GPIOE_IDR_HIGH;
200001e0:	4a06      	ldr	r2, [pc, #24]	; (200001fc <ascii_read_controller+0x30>)
200001e2:	1dfb      	adds	r3, r7, #7
200001e4:	7812      	ldrb	r2, [r2, #0]
200001e6:	701a      	strb	r2, [r3, #0]
ascii_ctrl_bit_clear( B_E );
200001e8:	2040      	movs	r0, #64	; 0x40
200001ea:	f7ff ff9d 	bl	20000128 <ascii_ctrl_bit_clear>
return c;
200001ee:	1dfb      	adds	r3, r7, #7
200001f0:	781b      	ldrb	r3, [r3, #0]
200001f2:	0018      	movs	r0, r3
200001f4:	46bd      	mov	sp, r7
200001f6:	b002      	add	sp, #8
200001f8:	bd80      	pop	{r7, pc}
200001fa:	46c0      	nop			; (mov r8, r8)
200001fc:	40021011 	andmi	r1, r2, r1, lsl r0
20000200:	004a4548 	subeq	r4, sl, r8, asr #10

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000001ec 	andeq	r0, r0, ip, ror #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	000000c3 	andeq	r0, r0, r3, asr #1
  10:	0000730c 	andeq	r7, r0, ip, lsl #6
	...
  20:	003a0200 	eorseq	r0, sl, r0, lsl #4
  24:	71010000 	mrsvc	r0, (UNDEF: 1)
  28:	00000047 	andeq	r0, r0, r7, asr #32
  2c:	200001cc 	andcs	r0, r0, ip, asr #3
  30:	00000034 	andeq	r0, r0, r4, lsr r0
  34:	00479c01 	subeq	r9, r7, r1, lsl #24
  38:	63030000 	movwvs	r0, #12288	; 0x3000
  3c:	47730100 	ldrbmi	r0, [r3, -r0, lsl #2]!
  40:	02000000 	andeq	r0, r0, #0
  44:	04007791 	streq	r7, [r0], #-1937	; 0xfffff86f
  48:	00b50801 	adcseq	r0, r5, r1, lsl #16
  4c:	50050000 	andpl	r0, r5, r0
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	00019c6a 	andeq	r9, r1, sl, ror #24
  58:	00003020 	andeq	r3, r0, r0, lsr #32
  5c:	709c0100 	addsvc	r0, ip, r0, lsl #2
  60:	06000000 	streq	r0, [r0], -r0
  64:	6a010063 	bvs	401f8 <startup-0x1ffbfe08>
  68:	00000047 	andeq	r0, r0, r7, asr #32
  6c:	00779102 	rsbseq	r9, r7, r2, lsl #2
  70:	00016e05 	andeq	r6, r1, r5, lsl #28
  74:	78650100 	stmdavc	r5!, {r8}^
  78:	24200001 	strtcs	r0, [r0], #-1
  7c:	01000000 	mrseq	r0, (UNDEF: 0)
  80:	00009f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
  84:	00630600 	rsbeq	r0, r3, r0, lsl #12
  88:	00476501 	subeq	r6, r7, r1, lsl #10
  8c:	91020000 	mrsls	r0, (UNDEF: 2)
  90:	00500777 	subseq	r0, r0, r7, ror r7
  94:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
  98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
  9c:	09000008 	stmdbeq	r0, {r3}
  a0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  a4:	190a0074 	stmdbne	sl, {r2, r4, r5, r6}
  a8:	01000000 	mrseq	r0, (UNDEF: 0)
  ac:	0001285c 	andeq	r2, r1, ip, asr r8
  b0:	00005020 	andeq	r5, r0, r0, lsr #32
  b4:	d49c0100 	ldrle	r0, [ip], #256	; 0x100
  b8:	06000000 	streq	r0, [r0], -r0
  bc:	5c010078 	stcpl	0, cr0, [r1], {120}	; 0x78
  c0:	00000047 	andeq	r0, r0, r7, asr #32
  c4:	036f9102 	cmneq	pc, #-2147483648	; 0x80000000
  c8:	5e010063 	cdppl	0, 0, cr0, cr1, cr3, {3}
  cc:	00000047 	andeq	r0, r0, r7, asr #32
  d0:	00779102 	rsbseq	r9, r7, r2, lsl #2
  d4:	0001870a 	andeq	r8, r1, sl, lsl #14
  d8:	e2530100 	subs	r0, r3, #0, 2
  dc:	46200000 	strtmi	r0, [r0], -r0
  e0:	01000000 	mrseq	r0, (UNDEF: 0)
  e4:	0001029c 	muleq	r1, ip, r2
  e8:	00780600 	rsbseq	r0, r8, r0, lsl #12
  ec:	00475301 	subeq	r5, r7, r1, lsl #6
  f0:	91020000 	mrsls	r0, (UNDEF: 2)
  f4:	0063036f 	rsbeq	r0, r3, pc, ror #6
  f8:	00475501 	subeq	r5, r7, r1, lsl #10
  fc:	91020000 	mrsls	r0, (UNDEF: 2)
 100:	00050077 	andeq	r0, r5, r7, ror r0
 104:	01000000 	mrseq	r0, (UNDEF: 0)
 108:	0000c049 	andeq	ip, r0, r9, asr #32
 10c:	00002220 	andeq	r2, r0, r0, lsr #4
 110:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
 114:	06000001 	streq	r0, [r0], -r1
 118:	0100736d 	tsteq	r0, sp, ror #6
 11c:	00012549 	andeq	r2, r1, r9, asr #10
 120:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 124:	07040400 	streq	r0, [r4, -r0, lsl #8]
 128:	0000000c 	andeq	r0, r0, ip
 12c:	00002e05 	andeq	r2, r0, r5, lsl #28
 130:	94400100 	strbls	r0, [r0], #-256	; 0xffffff00
 134:	2c200000 	stccs	0, cr0, [r0], #-0
 138:	01000000 	mrseq	r0, (UNDEF: 0)
 13c:	00014f9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
 140:	73750600 	cmnvc	r5, #0, 12
 144:	25400100 	strbcs	r0, [r0, #-256]	; 0xffffff00
 148:	02000001 	andeq	r0, r0, #1
 14c:	0b007491 	bleq	1d398 <startup-0x1ffe2c68>
 150:	00000067 	andeq	r0, r0, r7, rrx
 154:	00503501 	subseq	r3, r0, r1, lsl #10
 158:	00442000 	subeq	r2, r4, r0
 15c:	9c010000 	stcls	0, cr0, [r1], {-0}
 160:	00015b05 	andeq	r5, r1, r5, lsl #22
 164:	102d0100 	eorne	r0, sp, r0, lsl #2
 168:	40200000 	eormi	r0, r0, r0
 16c:	01000000 	mrseq	r0, (UNDEF: 0)
 170:	0001ba9c 	muleq	r1, ip, sl
 174:	00730c00 	rsbseq	r0, r3, r0, lsl #24
 178:	01ba2f01 			; <UNDEFINED> instruction: 0x01ba2f01
 17c:	680d0000 	stmdavs	sp, {}	; <UNPREDICTABLE>
 180:	01000001 	tsteq	r0, r1
 184:	0001c730 	andeq	ip, r1, r0, lsr r7
 188:	70910200 	addsvc	r0, r1, r0, lsl #4
 18c:	0000220e 	andeq	r2, r0, lr, lsl #4
 190:	00002020 	andeq	r2, r0, r0, lsr #32
 194:	00690300 	rsbeq	r0, r9, r0, lsl #6
 198:	009f3101 	addseq	r3, pc, r1, lsl #2
 19c:	91020000 	mrsls	r0, (UNDEF: 2)
 1a0:	00280e74 	eoreq	r0, r8, r4, ror lr
 1a4:	000e2000 	andeq	r2, lr, r0
 1a8:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
 1ac:	01000001 	tsteq	r0, r1
 1b0:	00009f32 	andeq	r9, r0, r2, lsr pc
 1b4:	00000800 	andeq	r0, r0, r0, lsl #16
 1b8:	040f0000 	streq	r0, [pc], #-0	; 1c0 <startup-0x1ffffe40>
 1bc:	000001c0 	andeq	r0, r0, r0, asr #3
 1c0:	be080104 	adflte	f0, f0, f4
 1c4:	10000000 	andne	r0, r0, r0
 1c8:	000001c0 	andeq	r0, r0, r0, asr #3
 1cc:	000001d7 	ldrdeq	r0, [r0], -r7
 1d0:	0001d711 	andeq	sp, r1, r1, lsl r7
 1d4:	04000200 	streq	r0, [r0], #-512	; 0xfffffe00
 1d8:	017e0704 	cmneq	lr, r4, lsl #14
 1dc:	600b0000 	andvs	r0, fp, r0
 1e0:	01000001 	tsteq	r0, r1
 1e4:	00000023 	andeq	r0, r0, r3, lsr #32
 1e8:	00000c20 	andeq	r0, r0, r0, lsr #24
 1ec:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
  14:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13491927 	movtne	r1, #39207	; 0x9927
  20:	06120111 			; <UNDEFINED> instruction: 0x06120111
  24:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  28:	00130119 	andseq	r0, r3, r9, lsl r1
  2c:	00340300 	eorseq	r0, r4, r0, lsl #6
  30:	0b3a0803 	bleq	e82044 <startup-0x1f17dfbc>
  34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  38:	00001802 	andeq	r1, r0, r2, lsl #16
  3c:	0b002404 	bleq	9054 <startup-0x1fff6fac>
  40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  44:	0500000e 	streq	r0, [r0, #-14]
  48:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  4c:	0b3a0e03 	bleq	e83860 <startup-0x1f17c7a0>
  50:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  54:	06120111 			; <UNDEFINED> instruction: 0x06120111
  58:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  5c:	00130119 	andseq	r0, r3, r9, lsl r1
  60:	00050600 	andeq	r0, r5, r0, lsl #12
  64:	0b3a0803 	bleq	e82078 <startup-0x1f17df88>
  68:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  6c:	00001802 	andeq	r1, r0, r2, lsl #16
  70:	3f012e07 	svccc	0x00012e07
  74:	3a0e0319 	bcc	380ce0 <startup-0x1fc7f320>
  78:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  7c:	00193c13 	andseq	r3, r9, r3, lsl ip
  80:	00180800 	andseq	r0, r8, r0, lsl #16
  84:	24090000 	strcs	r0, [r9], #-0
  88:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  8c:	0008030b 	andeq	r0, r8, fp, lsl #6
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	01111927 	tsteq	r1, r7, lsr #18
  a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
  a8:	0b000013 	bleq	fc <startup-0x1fffff04>
  ac:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  b0:	0b3a0e03 	bleq	e838c4 <startup-0x1f17c73c>
  b4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
  bc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  c0:	0c000019 	stceq	0, cr0, [r0], {25}
  c4:	08030034 	stmdaeq	r3, {r2, r4, r5}
  c8:	0b3b0b3a 	bleq	ec2db8 <startup-0x1f13d248>
  cc:	00001349 	andeq	r1, r0, r9, asr #6
  d0:	0300340d 	movweq	r3, #1037	; 0x40d
  d4:	3b0b3a0e 	blcc	2ce914 <startup-0x1fd316ec>
  d8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  dc:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
  e0:	0111010b 	tsteq	r1, fp, lsl #2
  e4:	00000612 	andeq	r0, r0, r2, lsl r6
  e8:	0b000f0f 	bleq	3d2c <startup-0x1fffc2d4>
  ec:	0013490b 	andseq	r4, r3, fp, lsl #18
  f0:	01011000 	mrseq	r1, (UNDEF: 1)
  f4:	13011349 	movwne	r1, #4937	; 0x1349
  f8:	21110000 	tstcs	r1, r0
  fc:	2f134900 	svccs	0x00134900
 100:	0000000b 	andeq	r0, r0, fp

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000200 	andcs	r0, r0, r0, lsl #4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000cb 	andeq	r0, r0, fp, asr #1
   4:	00580002 	subseq	r0, r8, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
  28:	41442f61 	cmpmi	r4, r1, ror #30
  2c:	37313054 			; <UNDEFINED> instruction: 0x37313054
  30:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  34:	6f4d2f31 	svcvs	0x004d2f31
  38:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  3c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  40:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  44:	73612f72 	cmnvc	r1, #456	; 0x1c8
  48:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
  4c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  50:	00007961 	andeq	r7, r0, r1, ror #18
  54:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  58:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  5c:	00010063 	andeq	r0, r1, r3, rrx
  60:	05000000 	streq	r0, [r0, #-0]
  64:	00000002 	andeq	r0, r0, r2
  68:	01230320 			; <UNDEFINED> instruction: 0x01230320
  6c:	03025e13 	movweq	r5, #11795	; 0x2e13
  70:	00010100 	andeq	r0, r1, r0, lsl #2
  74:	00100205 	andseq	r0, r0, r5, lsl #4
  78:	2d032000 	stccs	0, cr2, [r3, #-0]
  7c:	00673e01 	rsbeq	r3, r7, r1, lsl #28
  80:	3d030402 	cfstrscc	mvf0, [r3, #-8]
  84:	03040200 	movweq	r0, #16896	; 0x4200
  88:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
  8c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
  90:	3d30753f 	cfldr32cc	mvfx7, [r0, #-252]!	; 0xffffff04
  94:	003e3d3d 	eorseq	r3, lr, sp, lsr sp
  98:	06010402 	streq	r0, [r1], -r2, lsl #8
  9c:	3d680620 	stclcc	6, cr0, [r8, #-128]!	; 0xffffff80
  a0:	2f214c9f 	svccs	0x00214c9f
  a4:	5e2a2f2f 	cdppl	15, 2, cr2, cr10, cr15, {1}
  a8:	3b21504b 	blcc	8541dc <startup-0x1f7abe24>
  ac:	59694c5b 	stmdbpl	r9!, {r0, r1, r3, r4, r6, sl, fp, lr}^
  b0:	687759bb 	ldmdavs	r7!, {r0, r1, r3, r4, r5, r7, r8, fp, ip, lr}^
  b4:	59130859 	ldmdbpl	r3, {r0, r3, r4, r6, fp}
  b8:	593d6778 	ldmdbpl	sp!, {r3, r4, r5, r6, r8, r9, sl, sp, lr}
  bc:	4b3d674c 	blmi	f59df4 <startup-0x1f0a620c>
  c0:	3e683d2f 	cdpcc	13, 6, cr3, cr8, cr15, {1}
  c4:	4b2f2f3d 	blmi	bcbdc0 <startup-0x1f434240>
  c8:	07022f3d 	smladxeq	r2, sp, pc, r2	; <UNPREDICTABLE>
  cc:	Address 0x000000cc is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  10:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  14:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  18:	63736100 	cmnvs	r3, #0, 2
  1c:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
  20:	5f6c7274 	svcpl	0x006c7274
  24:	5f746962 	svcpl	0x00746962
  28:	61656c63 	cmnvs	r5, r3, ror #24
  2c:	65640072 	strbvs	r0, [r4, #-114]!	; 0xffffff8e
  30:	5f79616c 	svcpl	0x0079616c
  34:	726b696d 	rsbvc	r6, fp, #1785856	; 0x1b4000
  38:	7361006f 	cmnvc	r1, #111	; 0x6f
  3c:	5f696963 	svcpl	0x00696963
  40:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
  44:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
  48:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; fffffe80 <ascii_read_controller+0xdffffcb4>
  4c:	0072656c 	rsbseq	r6, r2, ip, ror #10
  50:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  54:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
  58:	5f657469 	svcpl	0x00657469
  5c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
  60:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
  64:	64007265 	strvs	r7, [r0], #-613	; 0xfffffd9b
  68:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  6c:	3035325f 	eorscc	r3, r5, pc, asr r2
  70:	4300736e 	movwmi	r7, #878	; 0x36e
  74:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  78:	2f737265 	svccs	0x00737265
  7c:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
  80:	41442f61 	cmpmi	r4, r1, ror #30
  84:	37313054 			; <UNDEFINED> instruction: 0x37313054
  88:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  8c:	6f4d2f31 	svcvs	0x004d2f31
  90:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  94:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  98:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  9c:	73612f72 	cmnvc	r1, #456	; 0x1c8
  a0:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
  a4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  a8:	732f7961 			; <UNDEFINED> instruction: 0x732f7961
  ac:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  b0:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  b4:	736e7500 	cmnvc	lr, #0, 10
  b8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  bc:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  c0:	47007261 	strmi	r7, [r0, -r1, ror #4]
  c4:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  c8:	36203939 			; <UNDEFINED> instruction: 0x36203939
  cc:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
  d0:	31303220 	teqcc	r0, r0, lsr #4
  d4:	31323037 	teqcc	r2, r7, lsr r0
  d8:	72282035 	eorvc	r2, r8, #53	; 0x35
  dc:	61656c65 	cmnvs	r5, r5, ror #24
  e0:	20296573 	eorcs	r6, r9, r3, ror r5
  e4:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
  e8:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
  ec:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
  f0:	2d362d64 	ldccs	13, cr2, [r6, #-400]!	; 0xfffffe70
  f4:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  f8:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  fc:	73697665 	cmnvc	r9, #105906176	; 0x6500000
 100:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 104:	35353432 	ldrcc	r3, [r5, #-1074]!	; 0xfffffbce
 108:	205d3231 	subscs	r3, sp, r1, lsr r2
 10c:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
 110:	20626d75 	rsbcs	r6, r2, r5, ror sp
 114:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
 118:	613d6863 	teqvs	sp, r3, ror #16
 11c:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
 120:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
 124:	6f6c666d 	svcvs	0x006c666d
 128:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
 12c:	733d6962 	teqvc	sp, #1605632	; 0x188000
 130:	2074666f 	rsbscs	r6, r4, pc, ror #12
 134:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
 138:	20626d75 	rsbcs	r6, r2, r5, ror sp
 13c:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
 140:	613d6863 	teqvs	sp, r3, ror #16
 144:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
 148:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
 14c:	4f2d2067 	svcmi	0x002d2067
 150:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
 154:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
 158:	6d003939 	vstrvs.16	s6, [r0, #-114]	; 0xffffff8e	; <UNPREDICTABLE>
 15c:	006e6961 	rsbeq	r6, lr, r1, ror #18
 160:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 164:	00707574 	rsbseq	r7, r0, r4, ror r5
 168:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 16c:	73610031 	cmnvc	r1, #49	; 0x31
 170:	5f696963 	svcpl	0x00696963
 174:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 178:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 17c:	69730064 	ldmdbvs	r3!, {r2, r5, r6}^
 180:	7974657a 	ldmdbvc	r4!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}^
 184:	61006570 	tstvs	r0, r0, ror r5
 188:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 18c:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
 190:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 194:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
 198:	Address 0x00000198 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000040 	andeq	r0, r0, r0, asr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	100e4101 	andne	r4, lr, r1, lsl #2
  3c:	00070d41 	andeq	r0, r7, r1, asr #26
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000050 	andcs	r0, r0, r0, asr r0
  4c:	00000044 	andeq	r0, r0, r4, asr #32
  50:	40080e41 	andmi	r0, r8, r1, asr #28
  54:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  58:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000094 	mulcs	r0, r4, r0
  68:	0000002c 	andeq	r0, r0, ip, lsr #32
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000c0 	andcs	r0, r0, r0, asr #1
  88:	00000022 	andeq	r0, r0, r2, lsr #32
  8c:	40080e41 	andmi	r0, r8, r1, asr #28
  90:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  94:	100e4101 	andne	r4, lr, r1, lsl #2
  98:	00070d41 	andeq	r0, r7, r1, asr #26
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	200000e2 	andcs	r0, r0, r2, ror #1
  a8:	00000046 	andeq	r0, r0, r6, asr #32
  ac:	40080e41 	andmi	r0, r8, r1, asr #28
  b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b4:	180e4101 	stmdane	lr, {r0, r8, lr}
  b8:	00070d41 	andeq	r0, r7, r1, asr #26
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000128 	andcs	r0, r0, r8, lsr #2
  c8:	00000050 	andeq	r0, r0, r0, asr r0
  cc:	40080e41 	andmi	r0, r8, r1, asr #28
  d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d4:	180e4101 	stmdane	lr, {r0, r8, lr}
  d8:	00070d41 	andeq	r0, r7, r1, asr #26
  dc:	0000001c 	andeq	r0, r0, ip, lsl r0
  e0:	00000000 	andeq	r0, r0, r0
  e4:	20000178 	andcs	r0, r0, r8, ror r1
  e8:	00000024 	andeq	r0, r0, r4, lsr #32
  ec:	40080e41 	andmi	r0, r8, r1, asr #28
  f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  f4:	100e4101 	andne	r4, lr, r1, lsl #2
  f8:	00070d41 	andeq	r0, r7, r1, asr #26
  fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 100:	00000000 	andeq	r0, r0, r0
 104:	2000019c 	mulcs	r0, ip, r1
 108:	00000030 	andeq	r0, r0, r0, lsr r0
 10c:	40080e41 	andmi	r0, r8, r1, asr #28
 110:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 114:	100e4101 	andne	r4, lr, r1, lsl #2
 118:	00070d41 	andeq	r0, r7, r1, asr #26
 11c:	0000001c 	andeq	r0, r0, ip, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	200001cc 	andcs	r0, r0, ip, asr #3
 128:	00000034 	andeq	r0, r0, r4, lsr r0
 12c:	40080e41 	andmi	r0, r8, r1, asr #28
 130:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 134:	100e4101 	andne	r4, lr, r1, lsl #2
 138:	00070d41 	andeq	r0, r7, r1, asr #26
