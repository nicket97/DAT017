
./Debug/flipflop_irq_ack.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
static volatile int c = 0;
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f886 	bl	20000114 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <irq_handler>:
void irq_handler ( void )
{
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
	/* Om avbrott från EXTI3:
		kvittera avbrott från EXTI3 */
	if(   *((unsigned int *) EXTI_PR) & EXTI3_IRQ_BPOS )
20000016:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <irq_handler+0x38>)
20000018:	681b      	ldr	r3, [r3, #0]
2000001a:	2208      	movs	r2, #8
2000001c:	4013      	ands	r3, r2
2000001e:	d00e      	beq.n	2000003e <irq_handler+0x2e>
	{
        volatile unsigned int x =  *GPIOE_IDR_LOW;
20000020:	4b0a      	ldr	r3, [pc, #40]	; (2000004c <irq_handler+0x3c>)
20000022:	781b      	ldrb	r3, [r3, #0]
20000024:	b2db      	uxtb	r3, r3
20000026:	607b      	str	r3, [r7, #4]
        if(EXIT3_IRQ0 == 1){
        c++;
20000028:	4b09      	ldr	r3, [pc, #36]	; (20000050 <irq_handler+0x40>)
2000002a:	681b      	ldr	r3, [r3, #0]
2000002c:	1c5a      	adds	r2, r3, #1
2000002e:	4b08      	ldr	r3, [pc, #32]	; (20000050 <irq_handler+0x40>)
20000030:	601a      	str	r2, [r3, #0]
       *((unsigned int *) EXTI_PR) |= EXTI3_IRQ_BPOS;
20000032:	4b05      	ldr	r3, [pc, #20]	; (20000048 <irq_handler+0x38>)
20000034:	4a04      	ldr	r2, [pc, #16]	; (20000048 <irq_handler+0x38>)
20000036:	6812      	ldr	r2, [r2, #0]
20000038:	2108      	movs	r1, #8
2000003a:	430a      	orrs	r2, r1
2000003c:	601a      	str	r2, [r3, #0]
        }
        
 	}
}
2000003e:	46c0      	nop			; (mov r8, r8)
20000040:	46bd      	mov	sp, r7
20000042:	b002      	add	sp, #8
20000044:	bd80      	pop	{r7, pc}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	40013c14 	andmi	r3, r1, r4, lsl ip
2000004c:	40021010 	andmi	r1, r2, r0, lsl r0
20000050:	20000130 	andcs	r0, r0, r0, lsr r1

20000054 <init_app>:

void init_app( void )
{   
20000054:	b580      	push	{r7, lr}
20000056:	af00      	add	r7, sp, #0
  
  *GPIOD_MODER = 0x55555555;
20000058:	4b1e      	ldr	r3, [pc, #120]	; (200000d4 <init_app+0x80>)
2000005a:	4a1f      	ldr	r2, [pc, #124]	; (200000d8 <init_app+0x84>)
2000005c:	601a      	str	r2, [r3, #0]
	/*sätter våra in och ut portar*/
	*GPIOD_OTYPER = 0x70;
2000005e:	4b1f      	ldr	r3, [pc, #124]	; (200000dc <init_app+0x88>)
20000060:	2270      	movs	r2, #112	; 0x70
20000062:	801a      	strh	r2, [r3, #0]
	*GPIOD_PUPDR = 0x0AA;
20000064:	4b1e      	ldr	r3, [pc, #120]	; (200000e0 <init_app+0x8c>)
20000066:	22aa      	movs	r2, #170	; 0xaa
20000068:	601a      	str	r2, [r3, #0]
	*GPIOD_ODR_HIGH = *GPIOD_ODR_HIGH & 0x00FF;
2000006a:	4b1e      	ldr	r3, [pc, #120]	; (200000e4 <init_app+0x90>)
2000006c:	4a1d      	ldr	r2, [pc, #116]	; (200000e4 <init_app+0x90>)
2000006e:	7812      	ldrb	r2, [r2, #0]
20000070:	b2d2      	uxtb	r2, r2
20000072:	701a      	strb	r2, [r3, #0]
    
  *GPIOE_MODER = 0x0100;		/* Data direction digital io */	
20000074:	4b1c      	ldr	r3, [pc, #112]	; (200000e8 <init_app+0x94>)
20000076:	2280      	movs	r2, #128	; 0x80
20000078:	0052      	lsls	r2, r2, #1
2000007a:	601a      	str	r2, [r3, #0]
	*GPIOE_PUPDR = 0;			/* Input floating */	
2000007c:	4b1b      	ldr	r3, [pc, #108]	; (200000ec <init_app+0x98>)
2000007e:	2200      	movs	r2, #0
20000080:	601a      	str	r2, [r3, #0]
	*GPIOE_OTYPER = 0;			/* Output push/pull */	
20000082:	4b1b      	ldr	r3, [pc, #108]	; (200000f0 <init_app+0x9c>)
20000084:	2200      	movs	r2, #0
20000086:	801a      	strh	r2, [r3, #0]

	*GPIOE_ODR_LOW = 0x10;		/* RESET Flipflop */
20000088:	4b1a      	ldr	r3, [pc, #104]	; (200000f4 <init_app+0xa0>)
2000008a:	2210      	movs	r2, #16
2000008c:	701a      	strb	r2, [r3, #0]
	*GPIOE_ODR_LOW = ~0x10;   
2000008e:	4b19      	ldr	r3, [pc, #100]	; (200000f4 <init_app+0xa0>)
20000090:	22ef      	movs	r2, #239	; 0xef
20000092:	701a      	strb	r2, [r3, #0]
    
  

	/* Koppla PE3 till avbrottslina EXTI3 */
  	 *((unsigned int *) SYSCFG_EXTICR1) |= 0x4444;
20000094:	4b18      	ldr	r3, [pc, #96]	; (200000f8 <init_app+0xa4>)
20000096:	4a18      	ldr	r2, [pc, #96]	; (200000f8 <init_app+0xa4>)
20000098:	6812      	ldr	r2, [r2, #0]
2000009a:	4918      	ldr	r1, [pc, #96]	; (200000fc <init_app+0xa8>)
2000009c:	430a      	orrs	r2, r1
2000009e:	601a      	str	r2, [r3, #0]
	/* Konfigurera EXTI3 för att generera avbrott */
  	 *((unsigned int *) EXTI_IMR) |= EXTI3_IRQ_BPOS;
200000a0:	4b17      	ldr	r3, [pc, #92]	; (20000100 <init_app+0xac>)
200000a2:	4a17      	ldr	r2, [pc, #92]	; (20000100 <init_app+0xac>)
200000a4:	6812      	ldr	r2, [r2, #0]
200000a6:	2108      	movs	r1, #8
200000a8:	430a      	orrs	r2, r1
200000aa:	601a      	str	r2, [r3, #0]
	/* Konfigurera för avbrott på negativ flank */
 	 *((unsigned int *) EXTI_FTSR) |= EXTI3_IRQ_BPOS;		
200000ac:	4b15      	ldr	r3, [pc, #84]	; (20000104 <init_app+0xb0>)
200000ae:	4a15      	ldr	r2, [pc, #84]	; (20000104 <init_app+0xb0>)
200000b0:	6812      	ldr	r2, [r2, #0]
200000b2:	2108      	movs	r1, #8
200000b4:	430a      	orrs	r2, r1
200000b6:	601a      	str	r2, [r3, #0]
	/* Sätt upp avbrottsvektor */
  	 *((void (**)(void) ) EXTI3_IRQVEC ) = irq_handler;     
200000b8:	4b13      	ldr	r3, [pc, #76]	; (20000108 <init_app+0xb4>)
200000ba:	4a14      	ldr	r2, [pc, #80]	; (2000010c <init_app+0xb8>)
200000bc:	601a      	str	r2, [r3, #0]
   	/* Konfigurera den bit i NVIC som kontrollerar den avbrottslina som EXTI3 kopplats till */
     *((unsigned int *) NVIC_ISER0) |= NVIC_EXTI3_IRQ_BPOS; 
200000be:	4b14      	ldr	r3, [pc, #80]	; (20000110 <init_app+0xbc>)
200000c0:	4a13      	ldr	r2, [pc, #76]	; (20000110 <init_app+0xbc>)
200000c2:	6812      	ldr	r2, [r2, #0]
200000c4:	2180      	movs	r1, #128	; 0x80
200000c6:	0089      	lsls	r1, r1, #2
200000c8:	430a      	orrs	r2, r1
200000ca:	601a      	str	r2, [r3, #0]
}
200000cc:	46c0      	nop			; (mov r8, r8)
200000ce:	46bd      	mov	sp, r7
200000d0:	bd80      	pop	{r7, pc}
200000d2:	46c0      	nop			; (mov r8, r8)
200000d4:	40020c00 	andmi	r0, r2, r0, lsl #24
200000d8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
200000dc:	40020c04 	andmi	r0, r2, r4, lsl #24
200000e0:	40020c0c 	andmi	r0, r2, ip, lsl #24
200000e4:	40020c15 	andmi	r0, r2, r5, lsl ip
200000e8:	40021000 	andmi	r1, r2, r0
200000ec:	4002100c 	andmi	r1, r2, ip
200000f0:	40021004 	andmi	r1, r2, r4
200000f4:	40021014 	andmi	r1, r2, r4, lsl r0
200000f8:	40013808 	andmi	r3, r1, r8, lsl #16
200000fc:	00004444 	andeq	r4, r0, r4, asr #8
20000100:	40013c00 	andmi	r3, r1, r0, lsl #24
20000104:	40013c0c 	andmi	r3, r1, ip, lsl #24
20000108:	2001c064 	andcs	ip, r1, r4, rrx
2000010c:	20000011 	andcs	r0, r0, r1, lsl r0
20000110:	e000e100 	and	lr, r0, r0, lsl #2

20000114 <main>:
void main(void)
{
20000114:	b580      	push	{r7, lr}
20000116:	af00      	add	r7, sp, #0
    init_app();
20000118:	f7ff ff9c 	bl	20000054 <init_app>
    while(1){
        *GPIOD_ODR_LOW = c;
2000011c:	4a02      	ldr	r2, [pc, #8]	; (20000128 <main+0x14>)
2000011e:	4b03      	ldr	r3, [pc, #12]	; (2000012c <main+0x18>)
20000120:	681b      	ldr	r3, [r3, #0]
20000122:	b2db      	uxtb	r3, r3
20000124:	7013      	strb	r3, [r2, #0]
20000126:	e7f9      	b.n	2000011c <main+0x8>
20000128:	40020c14 	andmi	r0, r2, r4, lsl ip
2000012c:	20000130 	andcs	r0, r0, r0, lsr r1

20000130 <c>:
20000130:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000a4 	andeq	r0, r0, r4, lsr #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000064 	andeq	r0, r0, r4, rrx
  10:	0000160c 	andeq	r1, r0, ip, lsl #12
	...
  20:	00630200 	rsbeq	r0, r3, r0, lsl #4
  24:	00373a01 	eorseq	r3, r7, r1, lsl #20
  28:	03050000 	movweq	r0, #20480	; 0x5000
  2c:	20000130 	andcs	r0, r0, r0, lsr r1
  30:	69050403 	stmdbvs	r5, {r0, r1, sl}
  34:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
  38:	00000030 	andeq	r0, r0, r0, lsr r0
  3c:	0000fc05 	andeq	pc, r0, r5, lsl #24
  40:	14720100 	ldrbtne	r0, [r2], #-256	; 0xffffff00
  44:	1c200001 	stcne	0, cr0, [r0], #-4
  48:	01000000 	mrseq	r0, (UNDEF: 0)
  4c:	000d069c 	muleq	sp, ip, r6
  50:	55010000 	strpl	r0, [r1, #-0]
  54:	20000054 	andcs	r0, r0, r4, asr r0
  58:	000000c0 	andeq	r0, r0, r0, asr #1
  5c:	01079c01 	tsteq	r7, r1, lsl #24
  60:	01000001 	tsteq	r0, r1
  64:	00001046 	andeq	r1, r0, r6, asr #32
  68:	00004420 	andeq	r4, r0, r0, lsr #8
  6c:	8a9c0100 	bhi	fe700474 <c+0xde700344>
  70:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  74:	20000020 	andcs	r0, r0, r0, lsr #32
  78:	0000001e 	andeq	r0, r0, lr, lsl r0
  7c:	01007802 	tsteq	r0, r2, lsl #16
  80:	0000914c 	andeq	r9, r0, ip, asr #2
  84:	74910200 	ldrvc	r0, [r1], #512	; 0x200
  88:	04090000 	streq	r0, [r9], #-0
  8c:	00000007 	andeq	r0, r0, r7
  90:	008a0400 	addeq	r0, sl, r0, lsl #8
  94:	5c060000 	stcpl	0, cr0, [r6], {-0}
  98:	01000000 	mrseq	r0, (UNDEF: 0)
  9c:	0000003d 	andeq	r0, r0, sp, lsr r0
  a0:	00000c20 	andeq	r0, r0, r0, lsr #24
  a4:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	00340200 	eorseq	r0, r4, r0, lsl #4
  14:	0b3a0803 	bleq	e82028 <startup-0x1f17dfd8>
  18:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  1c:	00001802 	andeq	r1, r0, r2, lsl #16
  20:	0b002403 	bleq	9034 <startup-0x1fff6fcc>
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  28:	04000008 	streq	r0, [r0], #-8
  2c:	13490035 	movtne	r0, #36917	; 0x9035
  30:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  34:	03193f00 	tsteq	r9, #0, 30
  38:	3b0b3a0e 	blcc	2ce878 <startup-0x1fd31788>
  3c:	1119270b 	tstne	r9, fp, lsl #14
  40:	40061201 	andmi	r1, r6, r1, lsl #4
  44:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  48:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
  4c:	03193f00 	tsteq	r9, #0, 30
  50:	3b0b3a0e 	blcc	2ce890 <startup-0x1fd31770>
  54:	1119270b 	tstne	r9, fp, lsl #14
  58:	40061201 	andmi	r1, r6, r1, lsl #4
  5c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  60:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
  64:	03193f01 	tsteq	r9, #1, 30
  68:	3b0b3a0e 	blcc	2ce8a8 <startup-0x1fd31758>
  6c:	1119270b 	tstne	r9, fp, lsl #14
  70:	40061201 	andmi	r1, r6, r1, lsl #4
  74:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  78:	00001301 	andeq	r1, r0, r1, lsl #6
  7c:	11010b08 	tstne	r1, r8, lsl #22
  80:	00061201 	andeq	r1, r6, r1, lsl #4
  84:	00240900 	eoreq	r0, r4, r0, lsl #18
  88:	0b3e0b0b 	bleq	f82cbc <startup-0x1f07d344>
  8c:	00000e03 	andeq	r0, r0, r3, lsl #28
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000120 	andeq	r0, r0, r0, lsr #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000130 	andcs	r0, r0, r0, lsr r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000a1 	andeq	r0, r0, r1, lsr #1
   4:	005c0002 	subseq	r0, ip, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
  28:	41442f61 	cmpmi	r4, r1, ror #30
  2c:	37313054 			; <UNDEFINED> instruction: 0x37313054
  30:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  34:	6f4d2f31 	svcvs	0x004d2f31
  38:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  3c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  40:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  44:	6c662f72 	stclvs	15, cr2, [r6], #-456	; 0xfffffe38
  48:	6c667069 	stclvs	0, cr7, [r6], #-420	; 0xfffffe5c
  4c:	695f706f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  50:	615f7172 	cmpvs	pc, r2, ror r1	; <UNPREDICTABLE>
  54:	00006b63 	andeq	r6, r0, r3, ror #22
  58:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  5c:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  60:	00010063 	andeq	r0, r1, r3, rrx
  64:	05000000 	streq	r0, [r0, #-0]
  68:	00000002 	andeq	r0, r0, r2
  6c:	013d0320 	teqeq	sp, r0, lsr #6
  70:	03025e13 	movweq	r5, #11795	; 0x2e13
  74:	00010100 	andeq	r0, r1, r0, lsl #2
  78:	00100205 	andseq	r0, r0, r5, lsl #4
  7c:	c6032000 	strgt	r2, [r3], -r0
  80:	5a3f0100 	bpl	fc0488 <startup-0x1f03fb78>
  84:	af6a594c 	svcge	0x006a594c
  88:	3d3d3e30 	ldccc	14, cr3, [sp, #-192]!	; 0xffffff40
  8c:	3e3d4b5a 			; <UNDEFINED> instruction: 0x3e3d4b5a
  90:	6868413d 	stmdavs	r8!, {r0, r2, r3, r4, r5, r8, lr}^
  94:	02753e68 	rsbseq	r3, r5, #104, 28	; 0x680
  98:	002f1424 	eoreq	r1, pc, r4, lsr #8
  9c:	30010402 	andcc	r0, r1, r2, lsl #8
  a0:	01000a02 	tsteq	r0, r2, lsl #20
  a4:	Address 0x000000a4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
  10:	70615f74 	rsbvc	r5, r1, r4, ror pc
  14:	3a430070 	bcc	10c01dc <startup-0x1ef3fe24>
  18:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
  1c:	6e2f7372 	mcrvs	3, 1, r7, cr15, cr2, {3}
  20:	616c6369 	cmnvs	ip, r9, ror #6
  24:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
  28:	2f373130 	svccs	0x00373130
  2c:	3162614c 	cmncc	r2, ip, asr #2
  30:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
  34:	6f62616c 	svcvs	0x0062616c
  38:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
  3c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
  40:	696c662f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r9, sl, sp, lr}^
  44:	6f6c6670 	svcvs	0x006c6670
  48:	72695f70 	rsbvc	r5, r9, #112, 30	; 0x1c0
  4c:	63615f71 	cmnvs	r1, #452	; 0x1c4
  50:	74732f6b 	ldrbtvc	r2, [r3], #-3947	; 0xfffff095
  54:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  58:	00632e70 	rsbeq	r2, r3, r0, ror lr
  5c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  60:	00707574 	rsbseq	r7, r0, r4, ror r5
  64:	20554e47 	subscs	r4, r5, r7, asr #28
  68:	20393943 	eorscs	r3, r9, r3, asr #18
  6c:	2e332e36 	mrccs	14, 1, r2, cr3, cr6, {1}
  70:	30322031 	eorscc	r2, r2, r1, lsr r0
  74:	32303731 	eorscc	r3, r0, #12845056	; 0xc40000
  78:	28203531 	stmdacs	r0!, {r0, r4, r5, r8, sl, ip, sp}
  7c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  80:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  84:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  88:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  8c:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  90:	362d6465 	strtcc	r6, [sp], -r5, ror #8
  94:	6172622d 	cmnvs	r2, sp, lsr #4
  98:	2068636e 	rsbcs	r6, r8, lr, ror #6
  9c:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  a0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  a4:	35343220 	ldrcc	r3, [r4, #-544]!	; 0xfffffde0
  a8:	5d323135 	ldfpls	f3, [r2, #-212]!	; 0xffffff2c
  ac:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  b0:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  b4:	616d2d20 	cmnvs	sp, r0, lsr #26
  b8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  bc:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  c0:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  c4:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  c8:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  cc:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  d0:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  d4:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  d8:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  dc:	616d2d20 	cmnvs	sp, r0, lsr #26
  e0:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  e4:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  e8:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  ec:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  f0:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  f4:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  f8:	00393963 	eorseq	r3, r9, r3, ror #18
  fc:	6e69616d 	powvsez	f6, f1, #5.0
 100:	71726900 	cmnvc	r2, r0, lsl #18
 104:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
 108:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000044 	andeq	r0, r0, r4, asr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	100e4101 	andne	r4, lr, r1, lsl #2
  3c:	00070d41 	andeq	r0, r7, r1, asr #26
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000054 	andcs	r0, r0, r4, asr r0
  4c:	000000c0 	andeq	r0, r0, r0, asr #1
  50:	40080e41 	andmi	r0, r8, r1, asr #28
  54:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  58:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000114 	andcs	r0, r0, r4, lsl r1
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	070d4101 	streq	r4, [sp, -r1, lsl #2]
