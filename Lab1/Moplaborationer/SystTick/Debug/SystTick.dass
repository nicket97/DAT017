
./Debug/SystTick.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
//#define DELAY_COUNT 100000
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f850 	bl	200000a8 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <systick_irq_handler>:
void systick_irq_handler(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    *STK_CTRL = 0;
20000014:	4b0b      	ldr	r3, [pc, #44]	; (20000044 <systick_irq_handler+0x34>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
    delay_count --;
2000001a:	4b0b      	ldr	r3, [pc, #44]	; (20000048 <systick_irq_handler+0x38>)
2000001c:	681b      	ldr	r3, [r3, #0]
2000001e:	1e5a      	subs	r2, r3, #1
20000020:	4b09      	ldr	r3, [pc, #36]	; (20000048 <systick_irq_handler+0x38>)
20000022:	601a      	str	r2, [r3, #0]
    if(delay_count > 0)
20000024:	4b08      	ldr	r3, [pc, #32]	; (20000048 <systick_irq_handler+0x38>)
20000026:	681b      	ldr	r3, [r3, #0]
20000028:	2b00      	cmp	r3, #0
2000002a:	dd02      	ble.n	20000032 <systick_irq_handler+0x22>
        delay_1mikro();
2000002c:	f000 f860 	bl	200000f0 <delay_1mikro>
20000030:	e002      	b.n	20000038 <systick_irq_handler+0x28>
    else
        systick_flag = 1;
20000032:	4b06      	ldr	r3, [pc, #24]	; (2000004c <systick_irq_handler+0x3c>)
20000034:	2201      	movs	r2, #1
20000036:	601a      	str	r2, [r3, #0]
    systick_flag = 1;
20000038:	4b04      	ldr	r3, [pc, #16]	; (2000004c <systick_irq_handler+0x3c>)
2000003a:	2201      	movs	r2, #1
2000003c:	601a      	str	r2, [r3, #0]
    }
2000003e:	46c0      	nop			; (mov r8, r8)
20000040:	46bd      	mov	sp, r7
20000042:	bd80      	pop	{r7, pc}
20000044:	e000e010 	and	lr, r0, r0, lsl r0
20000048:	20000154 	andcs	r0, r0, r4, asr r1
2000004c:	20000150 	andcs	r0, r0, r0, asr r1

20000050 <init_app>:
void init_app(void){
20000050:	b580      	push	{r7, lr}
20000052:	af00      	add	r7, sp, #0
     *GPIOE_MODER = 0x55555555;
20000054:	4b0b      	ldr	r3, [pc, #44]	; (20000084 <init_app+0x34>)
20000056:	4a0c      	ldr	r2, [pc, #48]	; (20000088 <init_app+0x38>)
20000058:	601a      	str	r2, [r3, #0]
	/*s채tter v책ra in och ut portar*/
	//*GPIOE_OTYPER = 0x70;
	//*GPIOE_PUPDR = 0x0AA;
	//*GPIOE_ODR_HIGH = *GPIOE_ODR_HIGH & 0x00FF;
    
    *GPIOD_MODER = 0x55005555;
2000005a:	4b0c      	ldr	r3, [pc, #48]	; (2000008c <init_app+0x3c>)
2000005c:	4a0c      	ldr	r2, [pc, #48]	; (20000090 <init_app+0x40>)
2000005e:	601a      	str	r2, [r3, #0]
	/*s채tter v책ra in och ut portar*/
	*GPIOD_OTYPER = 0x70;
20000060:	4b0c      	ldr	r3, [pc, #48]	; (20000094 <init_app+0x44>)
20000062:	2270      	movs	r2, #112	; 0x70
20000064:	801a      	strh	r2, [r3, #0]
	*GPIOD_PUPDR = 0x0AA;
20000066:	4b0c      	ldr	r3, [pc, #48]	; (20000098 <init_app+0x48>)
20000068:	22aa      	movs	r2, #170	; 0xaa
2000006a:	601a      	str	r2, [r3, #0]
	*GPIOD_ODR_HIGH = *GPIOD_ODR_HIGH & 0x00FF;
2000006c:	4b0b      	ldr	r3, [pc, #44]	; (2000009c <init_app+0x4c>)
2000006e:	4a0b      	ldr	r2, [pc, #44]	; (2000009c <init_app+0x4c>)
20000070:	7812      	ldrb	r2, [r2, #0]
20000072:	b2d2      	uxtb	r2, r2
20000074:	701a      	strb	r2, [r3, #0]
    *((void (**) (void)) 0x2001c03c) = systick_irq_handler;
20000076:	4b0a      	ldr	r3, [pc, #40]	; (200000a0 <init_app+0x50>)
20000078:	4a0a      	ldr	r2, [pc, #40]	; (200000a4 <init_app+0x54>)
2000007a:	601a      	str	r2, [r3, #0]
    }
2000007c:	46c0      	nop			; (mov r8, r8)
2000007e:	46bd      	mov	sp, r7
20000080:	bd80      	pop	{r7, pc}
20000082:	46c0      	nop			; (mov r8, r8)
20000084:	40021000 	andmi	r1, r2, r0
20000088:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
2000008c:	40020c00 	andmi	r0, r2, r0, lsl #24
20000090:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000094:	40020c04 	andmi	r0, r2, r4, lsl #24
20000098:	40020c0c 	andmi	r0, r2, ip, lsl #24
2000009c:	40020c15 	andmi	r0, r2, r5, lsl ip
200000a0:	2001c03c 	andcs	ip, r1, ip, lsr r0
200000a4:	20000011 	andcs	r0, r0, r1, lsl r0

200000a8 <main>:
void main(void)
{
200000a8:	b580      	push	{r7, lr}
200000aa:	b082      	sub	sp, #8
200000ac:	af00      	add	r7, sp, #0
    init_app();
200000ae:	f7ff ffcf 	bl	20000050 <init_app>
    int c = 0;
200000b2:	2300      	movs	r3, #0
200000b4:	607b      	str	r3, [r7, #4]
    *GPIOE_ODR_LOW = 0x00;
200000b6:	4b0c      	ldr	r3, [pc, #48]	; (200000e8 <main+0x40>)
200000b8:	2200      	movs	r2, #0
200000ba:	701a      	strb	r2, [r3, #0]
    delay(DELAY_COUNT);
200000bc:	2064      	movs	r0, #100	; 0x64
200000be:	f000 f82f 	bl	20000120 <delay>
    *GPIOE_ODR_LOW = 0xFF;
200000c2:	4b09      	ldr	r3, [pc, #36]	; (200000e8 <main+0x40>)
200000c4:	22ff      	movs	r2, #255	; 0xff
200000c6:	701a      	strb	r2, [r3, #0]
    while(1){
        if(systick_flag){
200000c8:	4b08      	ldr	r3, [pc, #32]	; (200000ec <main+0x44>)
200000ca:	681b      	ldr	r3, [r3, #0]
200000cc:	2b00      	cmp	r3, #0
200000ce:	d103      	bne.n	200000d8 <main+0x30>
            break;
            }
            c++;
200000d0:	687b      	ldr	r3, [r7, #4]
200000d2:	3301      	adds	r3, #1
200000d4:	607b      	str	r3, [r7, #4]
        if(systick_flag){
200000d6:	e7f7      	b.n	200000c8 <main+0x20>
            break;
200000d8:	46c0      	nop			; (mov r8, r8)
        }
    *GPIOE_ODR_LOW = 0;
200000da:	4b03      	ldr	r3, [pc, #12]	; (200000e8 <main+0x40>)
200000dc:	2200      	movs	r2, #0
200000de:	701a      	strb	r2, [r3, #0]
}
200000e0:	46c0      	nop			; (mov r8, r8)
200000e2:	46bd      	mov	sp, r7
200000e4:	b002      	add	sp, #8
200000e6:	bd80      	pop	{r7, pc}
200000e8:	40021014 	andmi	r1, r2, r4, lsl r0
200000ec:	20000150 	andcs	r0, r0, r0, asr r1

200000f0 <delay_1mikro>:
void delay_1mikro(void){
200000f0:	b580      	push	{r7, lr}
200000f2:	af00      	add	r7, sp, #0
    *STK_CTRL = 0;
200000f4:	4b07      	ldr	r3, [pc, #28]	; (20000114 <delay_1mikro+0x24>)
200000f6:	2200      	movs	r2, #0
200000f8:	601a      	str	r2, [r3, #0]
    *STK_LOAD = (168 -1);
200000fa:	4b07      	ldr	r3, [pc, #28]	; (20000118 <delay_1mikro+0x28>)
200000fc:	22a7      	movs	r2, #167	; 0xa7
200000fe:	601a      	str	r2, [r3, #0]
    *STK_VAL = 0;
20000100:	4b06      	ldr	r3, [pc, #24]	; (2000011c <delay_1mikro+0x2c>)
20000102:	2200      	movs	r2, #0
20000104:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 7;
20000106:	4b03      	ldr	r3, [pc, #12]	; (20000114 <delay_1mikro+0x24>)
20000108:	2207      	movs	r2, #7
2000010a:	601a      	str	r2, [r3, #0]
    }
2000010c:	46c0      	nop			; (mov r8, r8)
2000010e:	46bd      	mov	sp, r7
20000110:	bd80      	pop	{r7, pc}
20000112:	46c0      	nop			; (mov r8, r8)
20000114:	e000e010 	and	lr, r0, r0, lsl r0
20000118:	e000e014 	and	lr, r0, r4, lsl r0
2000011c:	e000e018 	and	lr, r0, r8, lsl r0

20000120 <delay>:
void delay(unsigned int count)
{
20000120:	b580      	push	{r7, lr}
20000122:	b082      	sub	sp, #8
20000124:	af00      	add	r7, sp, #0
20000126:	6078      	str	r0, [r7, #4]
    if(count == 0)
20000128:	687b      	ldr	r3, [r7, #4]
2000012a:	2b00      	cmp	r3, #0
2000012c:	d008      	beq.n	20000140 <delay+0x20>
        return;
        delay_count = count;
2000012e:	687a      	ldr	r2, [r7, #4]
20000130:	4b05      	ldr	r3, [pc, #20]	; (20000148 <delay+0x28>)
20000132:	601a      	str	r2, [r3, #0]
        systick_flag = 0;
20000134:	4b05      	ldr	r3, [pc, #20]	; (2000014c <delay+0x2c>)
20000136:	2200      	movs	r2, #0
20000138:	601a      	str	r2, [r3, #0]
        delay_1mikro();
2000013a:	f7ff ffd9 	bl	200000f0 <delay_1mikro>
2000013e:	e000      	b.n	20000142 <delay+0x22>
        return;
20000140:	46c0      	nop			; (mov r8, r8)
    }
20000142:	46bd      	mov	sp, r7
20000144:	b002      	add	sp, #8
20000146:	bd80      	pop	{r7, pc}
20000148:	20000154 	andcs	r0, r0, r4, asr r1
2000014c:	20000150 	andcs	r0, r0, r0, asr r1

20000150 <systick_flag>:
20000150:	00000000 	andeq	r0, r0, r0

20000154 <delay_count>:
20000154:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000106 	andeq	r0, r0, r6, lsl #2
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000056 	andeq	r0, r0, r6, asr r0
  10:	0000fb0c 	andeq	pc, r0, ip, lsl #22
	...
  20:	00490200 	subeq	r0, r9, r0, lsl #4
  24:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
  28:	00000039 	andeq	r0, r0, r9, lsr r0
  2c:	01500305 	cmpeq	r0, r5, lsl #6
  30:	04032000 	streq	r2, [r3], #-0
  34:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  38:	00320400 	eorseq	r0, r2, r0, lsl #8
  3c:	23020000 	movwcs	r0, #8192	; 0x2000
  40:	01000000 	mrseq	r0, (UNDEF: 0)
  44:	0000391f 	andeq	r3, r0, pc, lsl r9
  48:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
  4c:	05200001 	streq	r0, [r0, #-1]!
  50:	00000043 	andeq	r0, r0, r3, asr #32
  54:	01205901 			; <UNDEFINED> instruction: 0x01205901
  58:	00302000 	eorseq	r2, r0, r0
  5c:	9c010000 	stcls	0, cr0, [r1], {-0}
  60:	00000073 	andeq	r0, r0, r3, ror r0
  64:	00002906 	andeq	r2, r0, r6, lsl #18
  68:	73590100 	cmpvc	r9, #0, 2
  6c:	02000000 	andeq	r0, r0, #0
  70:	07007491 			; <UNDEFINED> instruction: 0x07007491
  74:	00000704 	andeq	r0, r0, r4, lsl #14
  78:	16080000 	strne	r0, [r8], -r0
  7c:	01000000 	mrseq	r0, (UNDEF: 0)
  80:	0000f053 	andeq	pc, r0, r3, asr r0	; <UNPREDICTABLE>
  84:	00003020 	andeq	r3, r0, r0, lsr #32
  88:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
  8c:	000000ee 	andeq	r0, r0, lr, ror #1
  90:	00a84401 	adceq	r4, r8, r1, lsl #8
  94:	00482000 	subeq	r2, r8, r0
  98:	9c010000 	stcls	0, cr0, [r1], {-0}
  9c:	000000ba 	strheq	r0, [r0], -sl
  a0:	01006309 	tsteq	r0, r9, lsl #6
  a4:	00003247 	andeq	r3, r0, r7, asr #4
  a8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
  ac:	0000430a 	andeq	r4, r0, sl, lsl #6
  b0:	32490100 	subcc	r0, r9, #0, 2
  b4:	0b000000 	bleq	bc <startup-0x1fffff44>
  b8:	0d080000 	stceq	0, cr0, [r8, #-0]
  bc:	01000000 	mrseq	r0, (UNDEF: 0)
  c0:	00005036 	andeq	r5, r0, r6, lsr r0
  c4:	00005820 	andeq	r5, r0, r0, lsr #16
  c8:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
  cc:	0000002f 	andeq	r0, r0, pc, lsr #32
  d0:	00102d01 	andseq	r2, r0, r1, lsl #26
  d4:	00402000 	subeq	r2, r0, r0
  d8:	9c010000 	stcls	0, cr0, [r1], {-0}
  dc:	000000f8 	strdeq	r0, [r0], -r8
  e0:	00002c0c 	andeq	r2, r0, ip, lsl #24
  e4:	00000420 	andeq	r0, r0, r0, lsr #8
  e8:	00160a00 	andseq	r0, r6, r0, lsl #20
  ec:	31010000 	mrscc	r0, (UNDEF: 1)
  f0:	00000032 	andeq	r0, r0, r2, lsr r0
  f4:	0000000b 	andeq	r0, r0, fp
  f8:	0000f308 	andeq	pc, r0, r8, lsl #6
  fc:	00240100 	eoreq	r0, r4, r0, lsl #2
 100:	0c200000 	stceq	0, cr0, [r0], #-0
 104:	01000000 	mrseq	r0, (UNDEF: 0)
 108:	Address 0x00000108 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	00340200 	eorseq	r0, r4, r0, lsl #4
  14:	0b3a0e03 	bleq	e83828 <startup-0x1f17c7d8>
  18:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  1c:	00001802 	andeq	r1, r0, r2, lsl #16
  20:	0b002403 	bleq	9034 <startup-0x1fff6fcc>
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  28:	04000008 	streq	r0, [r0], #-8
  2c:	13490035 	movtne	r0, #36917	; 0x9035
  30:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  34:	03193f01 	tsteq	r9, #1, 30
  38:	3b0b3a0e 	blcc	2ce878 <startup-0x1fd31788>
  3c:	1119270b 	tstne	r9, fp, lsl #14
  40:	40061201 	andmi	r1, r6, r1, lsl #4
  44:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  48:	00001301 	andeq	r1, r0, r1, lsl #6
  4c:	03000506 	movweq	r0, #1286	; 0x506
  50:	3b0b3a0e 	blcc	2ce890 <startup-0x1fd31770>
  54:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  58:	07000018 	smladeq	r0, r8, r0, r0
  5c:	0b0b0024 	bleq	2c00f4 <startup-0x1fd3ff0c>
  60:	0e030b3e 	vmoveq.16	d3[0], r0
  64:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
  68:	03193f00 	tsteq	r9, #0, 30
  6c:	3b0b3a0e 	blcc	2ce8ac <startup-0x1fd31754>
  70:	1119270b 	tstne	r9, fp, lsl #14
  74:	40061201 	andmi	r1, r6, r1, lsl #4
  78:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  7c:	34090000 	strcc	r0, [r9], #-0
  80:	3a080300 	bcc	200c88 <startup-0x1fdff378>
  84:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  88:	00180213 	andseq	r0, r8, r3, lsl r2
  8c:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  90:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  94:	0b3b0b3a 	bleq	ec2d84 <startup-0x1f13d27c>
  98:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
  9c:	180b0000 	stmdane	fp, {}	; <UNPREDICTABLE>
  a0:	0c000000 	stceq	0, cr0, [r0], {-0}
  a4:	0111010b 	tsteq	r1, fp, lsl #2
  a8:	00000612 	andeq	r0, r0, r2, lsl r6
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000140 	andeq	r0, r0, r0, asr #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000150 	andcs	r0, r0, r0, asr r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000a3 	andeq	r0, r0, r3, lsr #1
   4:	00540002 	subseq	r0, r4, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
  28:	41442f61 	cmpmi	r4, r1, ror #30
  2c:	37313054 			; <UNDEFINED> instruction: 0x37313054
  30:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  34:	6f4d2f31 	svcvs	0x004d2f31
  38:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
  3c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  40:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  44:	79532f72 	ldmdbvc	r3, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  48:	69547473 	ldmdbvs	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  4c:	00006b63 	andeq	r6, r0, r3, ror #22
  50:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  54:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  58:	00010063 	andeq	r0, r1, r3, rrx
  5c:	05000000 	streq	r0, [r0, #-0]
  60:	00000002 	andeq	r0, r0, r2
  64:	01240320 			; <UNDEFINED> instruction: 0x01240320
  68:	03025e13 	movweq	r5, #11795	; 0x2e13
  6c:	00010100 	andeq	r0, r1, r0, lsl #2
  70:	00100205 	andseq	r0, r0, r5, lsl #4
  74:	2c032000 	stccs	0, cr2, [r3], {-0}
  78:	593d2f01 	ldmdbpl	sp!, {r0, r8, r9, sl, fp, sp}
  7c:	3d3d3e4b 	ldccc	14, cr3, [sp, #-300]!	; 0xfffffed4
  80:	3e422f91 	mcrcc	15, 2, r2, cr2, cr1, {4}
  84:	3d593d3d 	ldclcc	13, cr3, [r9, #-244]	; 0xffffff0c
  88:	2f3d5a08 	svccs	0x003d5a08
  8c:	3e3d3d2f 	cdpcc	13, 3, cr3, cr13, cr15, {1}
  90:	2421394d 	strtcs	r3, [r1], #-2381	; 0xfffff6b3
  94:	3d2f833d 	stccc	3, cr8, [pc, #-244]!	; ffffffa8 <delay_count+0xdffffe54>
  98:	a03d3d3d 	eorsge	r3, sp, sp, lsr sp
  9c:	3d3d3e4b 	ldccc	14, cr3, [sp, #-300]!	; 0xfffffed4
  a0:	07022439 	smladxeq	r2, r9, r4, r2
  a4:	Address 0x000000a4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
  10:	70615f74 	rsbvc	r5, r1, r4, ror pc
  14:	65640070 	strbvs	r0, [r4, #-112]!	; 0xffffff90
  18:	5f79616c 	svcpl	0x0079616c
  1c:	6b696d31 	blvs	1a5b4e8 <startup-0x1e5a4b18>
  20:	64006f72 	strvs	r6, [r0], #-3954	; 0xfffff08e
  24:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  28:	756f635f 	strbvc	r6, [pc, #-863]!	; fffffcd1 <delay_count+0xdffffb7d>
  2c:	7300746e 	movwvc	r7, #1134	; 0x46e
  30:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
  34:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
  38:	685f7172 	ldmdavs	pc, {r1, r4, r5, r6, r8, ip, sp, lr}^	; <UNPREDICTABLE>
  3c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
  40:	64007265 	strvs	r7, [r0], #-613	; 0xfffffd9b
  44:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  48:	73797300 	cmnvc	r9, #0, 6
  4c:	6b636974 	blvs	18da624 <startup-0x1e7259dc>
  50:	616c665f 	cmnvs	ip, pc, asr r6
  54:	4e470067 	cdpmi	0, 4, cr0, cr7, cr7, {3}
  58:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  5c:	2e362039 	mrccs	0, 1, r2, cr6, cr9, {1}
  60:	20312e33 	eorscs	r2, r1, r3, lsr lr
  64:	37313032 			; <UNDEFINED> instruction: 0x37313032
  68:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  6c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  70:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  74:	5b202965 	blpl	80a610 <startup-0x1f7f59f0>
  78:	2f4d5241 	svccs	0x004d5241
  7c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  80:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  84:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  88:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  8c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  90:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  94:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  98:	31353534 	teqcc	r5, r4, lsr r5
  9c:	2d205d32 	stccs	13, cr5, [r0, #-200]!	; 0xffffff38
  a0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  a4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  a8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  ac:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  b0:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  b4:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  b8:	616f6c66 	cmnvs	pc, r6, ror #24
  bc:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  c0:	6f733d69 	svcvs	0x00733d69
  c4:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  c8:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  cc:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  d0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  d4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  d8:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  dc:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  e0:	304f2d20 	subcc	r2, pc, r0, lsr #26
  e4:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
  e8:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
  ec:	616d0039 	cmnvs	sp, r9, lsr r0
  f0:	73006e69 	movwvc	r6, #3689	; 0xe69
  f4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  f8:	43007075 	movwmi	r7, #117	; 0x75
  fc:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 100:	2f737265 	svccs	0x00737265
 104:	6c63696e 			; <UNDEFINED> instruction: 0x6c63696e
 108:	41442f61 	cmpmi	r4, r1, ror #30
 10c:	37313054 			; <UNDEFINED> instruction: 0x37313054
 110:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
 114:	6f4d2f31 	svcvs	0x004d2f31
 118:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
 11c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 120:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 124:	79532f72 	ldmdbvc	r3, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 128:	69547473 	ldmdbvs	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 12c:	732f6b63 			; <UNDEFINED> instruction: 0x732f6b63
 130:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 134:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000040 	andeq	r0, r0, r0, asr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000050 	andcs	r0, r0, r0, asr r0
  48:	00000058 	andeq	r0, r0, r8, asr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	200000a8 	andcs	r0, r0, r8, lsr #1
  64:	00000048 	andeq	r0, r0, r8, asr #32
  68:	40080e41 	andmi	r0, r8, r1, asr #28
  6c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  70:	100e4101 	andne	r4, lr, r1, lsl #2
  74:	00070d41 	andeq	r0, r7, r1, asr #26
  78:	00000018 	andeq	r0, r0, r8, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  84:	00000030 	andeq	r0, r0, r0, lsr r0
  88:	40080e41 	andmi	r0, r8, r1, asr #28
  8c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  90:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  94:	0000001c 	andeq	r0, r0, ip, lsl r0
  98:	00000000 	andeq	r0, r0, r0
  9c:	20000120 	andcs	r0, r0, r0, lsr #2
  a0:	00000030 	andeq	r0, r0, r0, lsr r0
  a4:	40080e41 	andmi	r0, r8, r1, asr #28
  a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  ac:	100e4101 	andne	r4, lr, r1, lsl #2
  b0:	00070d41 	andeq	r0, r7, r1, asr #26
